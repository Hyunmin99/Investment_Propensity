[{"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/index.js":"1","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/App.js":"2","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/reportWebVitals.js":"3","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q3.js":"4","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q4.js":"5","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q5.js":"6","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q1.js":"7","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q2.js":"8","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q6.js":"9","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Start.js":"10","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/NextButton.js":"11","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/content/QnA.js":"12","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/content/RESULT.js":"13","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/content/QNA.js":"14","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/content/TYPE.js":"15","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/First_Result.js":"16","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/Header.js":"17","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q7.js":"18","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q8.js":"19","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q9.js":"20","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q10.js":"21","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q15.js":"22","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q11.js":"23","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q13.js":"24","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q14.js":"25","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q12.js":"26","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q16.js":"27","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Final_Result.js":"28","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/content/FinalTYPE.js":"29","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q18.js":"30","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q17.js":"31","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/ScrollToTop.js":"32"},{"size":625,"mtime":1650256481746,"results":"33","hashOfConfig":"34"},{"size":2275,"mtime":1650326355765,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1648428828015,"results":"36","hashOfConfig":"34"},{"size":1596,"mtime":1650267594006,"results":"37","hashOfConfig":"34"},{"size":1851,"mtime":1650267604497,"results":"38","hashOfConfig":"34"},{"size":1712,"mtime":1650267621571,"results":"39","hashOfConfig":"34"},{"size":1377,"mtime":1650326373262,"results":"40","hashOfConfig":"34"},{"size":1543,"mtime":1650267586580,"results":"41","hashOfConfig":"34"},{"size":1535,"mtime":1650267628619,"results":"42","hashOfConfig":"34"},{"size":1503,"mtime":1650351650286,"results":"43","hashOfConfig":"34"},{"size":480,"mtime":1650287670998,"results":"44","hashOfConfig":"34"},{"size":7937,"mtime":1649222973241,"results":"45","hashOfConfig":"34"},{"size":3533,"mtime":1650428471489,"results":"46","hashOfConfig":"34"},{"size":22187,"mtime":1650267013331,"results":"47","hashOfConfig":"34"},{"size":1559,"mtime":1649935853941,"results":"48","hashOfConfig":"34"},{"size":7103,"mtime":1650431331500,"results":"49","hashOfConfig":"34"},{"size":768,"mtime":1650326195949,"results":"50","hashOfConfig":"34"},{"size":1936,"mtime":1650267640280,"results":"51","hashOfConfig":"34"},{"size":1944,"mtime":1650267317563,"results":"52","hashOfConfig":"34"},{"size":1564,"mtime":1650267654074,"results":"53","hashOfConfig":"34"},{"size":1399,"mtime":1650267665610,"results":"54","hashOfConfig":"34"},{"size":1380,"mtime":1650267698892,"results":"55","hashOfConfig":"34"},{"size":1400,"mtime":1650267670848,"results":"56","hashOfConfig":"34"},{"size":1380,"mtime":1650267680517,"results":"57","hashOfConfig":"34"},{"size":1378,"mtime":1650267692746,"results":"58","hashOfConfig":"34"},{"size":1380,"mtime":1650267676250,"results":"59","hashOfConfig":"34"},{"size":1400,"mtime":1650267703711,"results":"60","hashOfConfig":"34"},{"size":14032,"mtime":1650431033174,"results":"61","hashOfConfig":"34"},{"size":5789,"mtime":1649986195028,"results":"62","hashOfConfig":"34"},{"size":1383,"mtime":1650267726096,"results":"63","hashOfConfig":"34"},{"size":1985,"mtime":1650267720895,"results":"64","hashOfConfig":"34"},{"size":370,"mtime":1650267844995,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"n7oa0t",{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"111"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/index.js",[],[],["172","173"],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/App.js",[],[],["174","175"],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/reportWebVitals.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q3.js",[],[],["176","177"],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q4.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q5.js",["178"],[],"import React, { useState } from 'react';\nimport Header from '../component/Header';\nimport NextButton from '../component/NextButton';\nimport QNA from '../content/QNA'\n\nconst QnA = QNA[4];\n\nfunction Q5(props) {\n    const Res = props.location.state.Res;\n    const ResponseList = [];\n    const [a, setA] = useState(false); // 렌더링을 위해.. 임의로 넣음\n\n    function MulSelection({ Answer }) {\n        const id = Answer.id;\n        const answer = Answer.Answer;\n\n        const onClick = () => {\n            Answer.State = !Answer.State;\n            QnA.status = true;\n            Answer.State === false ? setA(-id): setA(id);\n        };\n        return (\n            <div>\n                <li className={'ell-comp'} onClick={onClick} style={{backgroundColor: Answer.State ? '#1d1a82':'#F7F7F7', color: Answer.State && 'White'}}>{answer}</li>\n            </div>\n        );\n    }\n    \n    QnA.Answers.map(answer => (\n        answer.State && ResponseList.push(answer.id)\n    ));\n    Res[QnA.page] = ResponseList;\n\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <div className='Content'>\n                <h3 className='page'>{ QnA.page }</h3> \n                <h1 className='question'>{ QnA.Question }</h1>\n                <div className={'ell-body'}>\n                    {QnA.Answers.map(answer => (\n                        <MulSelection key= {answer.id} Answer={answer} />\n                    ))}\n                </div>\n                <div style={{paddingTop: '0.5rem'}}></div>\n                {QnA.status ?  <NextButton Path={\"/q6\"} Res={Res} Text={'Next'}/> : <button disabled className='next'>Next</button> }\n            </div>\n        </div>\n    );\n}\n\nexport default Q5;","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q1.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q2.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q6.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Start.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/NextButton.js",[],[],["179","180"],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/content/QnA.js",[],[],["181","182"],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/content/RESULT.js",[],[],["183","184"],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/content/QNA.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/content/TYPE.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/First_Result.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/Header.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q7.js",["185"],[],"import React, { useState } from 'react';\nimport Header from '../component/Header';\nimport NextButton from '../component/NextButton';\nimport QNA from '../content/QNA'\n\nconst QnA = QNA[6];\n\nfunction Q7(props) {\n    const Res = props.location.state.Res;\n    const ResponseList = [];\n    const [a, setA] = useState(false); // 렌더링을 위해.. 임의로 넣음\n\n    function MulSelection({ Answer }) {\n        const id = Answer.id;\n        const answer = Answer.Answer;\n        const price = Answer.Price;\n\n        const onClick = () => {\n            Answer.State = !Answer.State;\n            QnA.status = true;\n            Answer.State === false ? setA(-id): setA(id);\n        };\n        return (\n            <div>\n                <div className={'ell-comp'} onClick={onClick} style={{backgroundColor: Answer.State ? '#1d1a82':'#F7F7F7', color: Answer.State && 'White'}}>{answer}\n                <div className={'small-text'} style={{marginTop: '0.5rem'}}>\n                        {price}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    \n    QnA.Answers.map(answer => (\n        answer.State && ResponseList.push(answer.id)\n    ));\n    Res[QnA.page] = ResponseList;\n    console.log(ResponseList);\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <div className='Content'>\n                <h3 className='page'>{  QnA.page }</h3> \n                <h1 className='question'>{  QnA.Question }</h1>\n                <div className={'ell-body'}>\n                    { QnA.Answers.map(answer => (\n                        <MulSelection key= {answer.id} Answer={answer} />\n                    ))}\n                </div>\n                <div style={{paddingTop: '0.5rem'}}></div>\n                {QnA.status ?  <NextButton Path={\"/q8\"} Res={Res} Text={'Next'}/> : <button disabled className='next'>Next</button> }\n            </div>\n        </div>\n    );\n}\n\nexport default Q7;","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q8.js",["186"],[],"import React, { useState } from 'react';\nimport Header from '../component/Header';\nimport NextButton from '../component/NextButton';\nimport QNA from '../content/QNA'\n\nconst QnA = QNA[7];\n\nfunction Q8(props) {\n    const Res = props.location.state.Res;\n    const ResponseList = [];\n    \n    const [a, setA] = useState(false); // 렌더링을 위해.. 임의로 넣음\n\n    function MulSelection({ Answer }) {\n        const id = Answer.id;\n        const answer = Answer.Answer;\n        const sector = Answer.Sector;\n\n        const onClick = () => {\n            Answer.State = !Answer.State;\n            QnA.status = true;\n            Answer.State === false ? setA(-id): setA(id);\n        };\n        return (\n            <div>\n                <div className={'ell-comp'} onClick={onClick} style={{backgroundColor: Answer.State ? '#1d1a82':'#F7F7F7', color: Answer.State && 'White'}}>{answer}\n                <div className={'small-text'} style={{marginTop: '0.5rem'}}>\n                        {sector}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    \n    QnA.Answers.map(answer => (\n        answer.State && ResponseList.push(answer.id)\n    ));\n    Res[QnA.page] = ResponseList;\n    console.log(ResponseList);\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <div className='Content'>\n                <h3 className='page'>{  QnA.page }</h3> \n                <h1 className='question'>{  QnA.Question }</h1>\n                <div className={'ell-body'}>\n                    { QnA.Answers.map(answer => (\n                        <MulSelection key= {answer.id} Answer={answer} />\n                    ))}\n                </div>\n                <div style={{paddingTop: '0.5rem'}}></div>\n                {QnA.status ?  <NextButton Path={\"/q9\"} Res={Res} Text={'Next'}/> : <button disabled className='next'>Next</button> }\n            </div>\n        </div>\n    );\n}\n\nexport default Q8;","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q9.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q10.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q15.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q11.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q13.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q14.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q12.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q16.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Final_Result.js",["187"],[],"import React from 'react';\nimport '../App.css';\nimport Header from '../component/Header';\nimport RESULT from '../content/RESULT';\nimport Final_TYPE from '../content/FinalTYPE';\nimport NextButton from '../component/NextButton';\nimport QNA from '../content/QNA';\nimport { ComposedChart, XAxis, YAxis, Tooltip, Legend, CartesianGrid, Area, Line } from 'recharts';\n\nconst Result = RESULT;\nconst Final_Type = Final_TYPE;\n  \n\nfunction Final_Result(props) {\n    const Res = props.location.state.Res;\n    console.log(Res);\n\n    //Set Period Value - Q1\n    const Per_Quest = Res[1];\n    const Per = QNA[0].Answers.find(function(data) {\n        return data.id === Res[1]\n    });\n    //Set Purpose Value - Q2\n    const Pur1 = QNA[1].Answers.find(function(data) {\n        return data.id === Res[2]\n    });\n    //Set Tolerance Value - Q3\n    const Tol1 = QNA[2].Answers.find(function(data) {\n        return data.id === Res[3]\n    });\n    //Set Tolerance Value - Q4\n    const Tol2 = QNA[3].Answers.find(function(data) {\n        return data.id === Res[4]\n    });\n    //Set Literacy Value - Q5 (Sum of All Response)\n    let Lit1 = 0; //-> Literacy value\n    let tmp_lit = []; //-> 값 보관함 \n    for(let i = 0; i <Res[5].length; i++){\n        tmp_lit[i] = QNA[4].Answers.find(function(data){\n            return data.id === Res[5][i]\n        });\n        Lit1 = Lit1 + tmp_lit[i].Value;\n    };\n    //Set Experience Value - Q6\n    const Exp1 = QNA[5].Answers.find(function(data) {\n        return data.id === Res[6]\n    });\n    //Set Purpose Value - Q7\n    let Pur2 = 0; //-> Pur2 value\n    let tmp_pur = []; //-> 값 보관함 \n    for(let i = 0; i <Res[7].length; i++){\n        tmp_pur[i] = QNA[6].Answers.find(function(data){\n            return data.id === Res[7][i]\n        });\n        Pur2 = Pur2 + tmp_pur[i].Value;\n    };\n    //Just Section - Q8\n\n    //Set Tolerance Value - Q9\n    const Tol3 = QNA[8].Answers.find(function(data) {\n        return data.id === Res[9]\n    });\n    //Set Tolerance Value - Q10\n    const Tol4 = QNA[9].Answers.find(function(data) {\n        return data.id === Res[10]\n    });\n    //Set Literacy Value - Q11\n    const Lit2 = QNA[10].Answers.find(function(data) {\n        return data.id === Res[11]\n    });\n    //Set Literacy Value - Q12\n    const Lit3 = QNA[11].Answers.find(function(data) {\n        return data.id === Res[12]\n    });\n    //Set Experience Value - Q13\n    const Exp2 = QNA[12].Answers.find(function(data) {\n        return data.id === Res[13]\n    });\n    //Set Personal Info : Gender - Q14\n    const Gender = QNA[13].Answers.find(function(data) {\n        return data.id === Res[14]\n    });\n    //Set Personal Info : Age - Q15\n    const Age = QNA[14].Answers.find(function(data) {\n        return data.id === Res[15]\n    });\n    //Set Personal Info : Income - Q16\n    const Income = QNA[15].Answers.find(function(data) {\n        return data.id === Res[16]\n    });\n    //Set Personal Info : Invest Money - Q17\n    const Money = Res[17];\n    //Set Personal Info : Invest Property - Q18\n    const Property = QNA[17].Answers.find(function(data) {\n        return data.id === Res[18]\n    });\n\n    const Period = Per.Value;\n    const Purpose = Pur1.Value + Pur2;\n    const Tolerance = (Tol1.Value + Tol2.Value)/2 + Tol3.Value + Tol4.Value;\n    const Literacy = Lit1 + Lit2.Value + Lit3.Value;\n    const Experience = (Exp1.Value + Exp2.Value)/2;\n\n    function SetPeriod() { //투자 기간 Index 세팅\n        const idx = (Per_Quest === 5) ? 0 :\n            (Per_Quest === 4) ? 1 :\n            (Per_Quest === 3) ? 2 : \n            (Per_Quest === 2) ? 3 : \n            (Per_Quest === 1) ? 4 :\n            console.log('No Result');\n        console.log('투자 기간 응답: ', Per_Quest, '\\n투자 기간 Index: ', idx);\n        return idx;\n    }\n    function SetPurpose() { //투자 목적 Index 세팅\n        const idx = (Purpose >= 26) ? 0 :\n            (16 <= Purpose && Purpose < 26) ? 1 :\n            (6 <= Purpose && Purpose < 16) ? 2 : \n            (Purpose < 6) ? 3 : \n            console.log('No Result');\n        console.log('투자 목적 응답: ', Purpose, '\\n투자 목적 Index: ', idx);\n        return idx;\n    }\n    function SetTolerance() { //위험 감내도 Index 세팅\n        const idx = (Tolerance >= 26) ? 0 :\n            (16 <= Tolerance && Tolerance < 26) ? 1 :\n            (6 <= Tolerance && Tolerance < 16) ? 2 : \n            (Tolerance < 6) ? 3 : \n            console.log('No Result');\n        console.log('위험 감내도 응답: ', Tolerance, '\\n위험 감내도 Index: ', idx);\n        return idx;\n    }\n    function SetLiteracy() { //금융 이해도 Index 세팅\n        const idx = (Literacy >= 8) ? 0 :\n            (6 <= Literacy && Literacy < 8) ? 1 :\n            (3 <= Literacy && Literacy < 6) ? 2 : \n            (Literacy < 3) ? 3 : \n            console.log('No Result');\n        console.log('금융 이해도 응답: ', Literacy, '\\n금융 이해도 Index: ', idx);\n        return idx;\n    }\n    function SetExperience() { //투자 경험 Index 세팅\n        const idx = (Experience >= 31) ? 0 :\n            (21 <= Experience && Experience < 31) ? 1 :\n            (11 <= Experience && Experience < 21) ? 2 : \n            (Experience < 11) ? 3 : \n            console.log('No Result');\n\n        console.log('투자 경험 응답: ', Experience, '\\n투자 경험 Index: ', idx);\n        return idx;\n    }\n\n    const Res_Period = Result.투자기간[SetPeriod()];\n    const Res_Purpose = Result.투자목적[SetPurpose()];\n    const Res_Tolerance = Result.위험감내수준[SetTolerance()];\n    const Res_Literacy = Result.금융이해도[SetLiteracy()];\n    const Res_Experience = Result.투자경험[SetExperience()];\n\n    //토탈 점수 계산\n    const Total_Score = (Res_Purpose.Value + Res_Tolerance.Value + Res_Literacy.Value + Res_Experience.Value + Period + Age.Value + Income.Value + Property.Value);\n\n    //투자 성향 점수 계산\n    const Score = (Res_Purpose.Value + Res_Tolerance.Value + Res_Literacy.Value + Res_Experience.Value);\n\n    //투자 성향 캐릭터 Index 세팅\n    function SetType() { \n        console.log('Total Score is... ', Total_Score, '\\nScore is... ',Score);\n        const idx = ((Total_Score >=31) &&(16 <= Score <= 18)) ? 0 :\n            ((Total_Score >=31) && (14 <= Score && Score <= 15)) ? 1 :\n            ((Total_Score >=31) && (12 <= Score && Score <= 13)) ? 2 :\n            ((23<= Total_Score && Total_Score <=30) && (14 <= Score && Score <= 18)) ? 3 :\n            ((23<= Total_Score && Total_Score <=30) && (12 <= Score && Score <= 13)) ? 4 :\n            ((23<= Total_Score && Total_Score <=30) && (7 <= Score && Score <= 11)) ? 5 :\n            ((18<= Total_Score && Total_Score <=22) && (14 <= Score && Score <= 18)) ? 6 :\n            ((18<= Total_Score && Total_Score <=22) && (12 <= Score && Score <= 13)) ? 7 :\n            ((18<= Total_Score && Total_Score <=22) && (7 <= Score && Score <= 11)) ? 8 :\n            ((6<= Total_Score && Total_Score <=17) && (Score === 13)) ? 9 :\n            ((6<= Total_Score && Total_Score <=17) && (11 <= Score && Score <= 12)) ? 10 :\n            ((6<= Total_Score && Total_Score <=17) && (17 <= Score && Score <= 10)) ? 11 :\n            (Total_Score <=5) ? 12 : \n            console.log('Error Type');\n        return idx;\n    }\n\n    const Type = Final_Type[SetType()];\n\n    const MIN = Type.Min;\n    const MAX = Type.Max;\n    const REV = Type.Revenuse;\n\n    function valueLabelFormat(Money) {\n      \n        let scaledValue = Money;\n          \n        if(scaledValue < 10000) {\n          scaledValue = Math.round(scaledValue/10)*10;\n        }\n\n        while (scaledValue >= 10000) {\n            scaledValue /= 10000;\n        }\n        return parseInt(scaledValue);\n    }\n\n    function valueFormat(Money) {\n        const units = ['만원', '억원'];\n        let unitIndex = 0;\n\n        while (Money >= 10000 && unitIndex < units.length - 1) {\n            unitIndex += 1;\n            Money /= 10000;\n        }\n        return units[unitIndex];\n    }\n\n    const covMoney = valueLabelFormat(Money);\n    const covUnits = valueFormat(Money);\n\n    const data = [\n        {\n          \"year\": \"현재\",\n          \"예상수익범위\": [covMoney, covMoney],\n          \"예상수익\": covMoney\n        },\n        {\n          \"year\": \"5년\",\n          \"예상수익범위\": [((MIN/100*covMoney)*(5)+covMoney), ((MAX/100*covMoney)*(5)+covMoney)],\n          \"예상수익\": ((REV/100*covMoney)*(5)+covMoney)\n        },\n        {\n          \"year\": \"10년\",\n          \"예상수익범위\": [((MIN/100*covMoney)*(10)+covMoney), ((MAX/100*covMoney)*(10)+covMoney)],\n          \"예상수익\": ((REV/100*covMoney)*(10)+covMoney)\n        },\n        {\n          \"year\": \"15년\",\n          \"예상수익범위\": [((MIN/100*covMoney)*(15)+covMoney), ((MAX/100*covMoney)*(15)+covMoney)],\n          \"예상수익\": ((REV/100*covMoney)*(15)+covMoney)\n        },\n        {\n          \"year\": \"20년\",\n          \"예상수익범위\": [((MIN/100*covMoney)*(20)+covMoney), ((MAX/100*covMoney)*(20)+covMoney)],\n          \"예상수익\": ((REV/100*covMoney)*(20)+covMoney)\n        },\n        {\n          \"year\": \"25년\",\n          \"예상수익범위\": [((MIN/100*covMoney)*(25)+covMoney), ((MAX/100*covMoney)*(25)+covMoney)],\n          \"예상수익\": parseFloat(((REV/100*covMoney)*(25)+covMoney).toFixed(2))\n        },\n        {\n          \"year\": \"30년\",\n          \"예상수익범위\": [parseFloat(((MIN/100*covMoney)*(30)+covMoney).toFixed(2)), parseFloat(((MAX/100*covMoney)*(30)+covMoney).toFixed(2))],\n          \"예상수익\": parseFloat(((REV/100*covMoney)*(30)+covMoney).toFixed(2))\n        },\n        {\n          \"year\": \"35년\",\n          \"예상수익범위\": [parseFloat(((MIN/100*covMoney)*(35)+covMoney).toFixed(2)), parseFloat(((MAX/100*covMoney)*(35)+covMoney).toFixed(2))],\n          \"예상수익\": parseFloat(((REV/100*covMoney)*(35)+covMoney).toFixed(2))\n        },\n        {\n          \"year\": \"40년\",\n          \"예상수익범위\": [parseFloat(((MIN/100*covMoney)*(40)+covMoney).toFixed(2)), parseFloat(((MAX/100*covMoney)*(40)+covMoney).toFixed(2))],\n          \"예상수익\": parseFloat(((REV/100*covMoney)*(40)+covMoney).toFixed(2))\n        }\n    ]\n\n    return (\n        <div className=\"App\">\n        <Header />\n        <div className='Result'>  {/* style={{display: 'flex'}} */}\n            <div> \n            <div> \n                <div className='Quest'>\n                <div style={{fontSize: '20px', fontWeight: '700', fontFamily: 'DungGeunMo'}}>Quest</div>\n                <div>{Res_Period.Quest}</div>\n                </div>\n                {/* <img className='TypeImage'></img> */}\n                <div className='TypeImage'></div>\n                <h1 style={{color: '#fefefe', fontFamily: 'DungGeunMo', padding: '0.5rem'}}>{Type.Char}</h1>\n            </div>\n            <div className='Explain'>\n                <div className='CharInfo'>\n                    <div className='Table'>\n                        <p><b>투자 목적</b>: {Res_Purpose.Grade}<span style={{color: '#A7A8A3', fontSize: '0.8rem', fontWeight:'800'}}> / 4등급</span></p>\n                        <p><b>위험 감내도</b>: {Res_Tolerance.Grade}<span style={{color: '#A7A8A3', fontSize: '0.8rem', fontWeight:'800'}}> / 4등급</span></p>\n                        <p><b>금융 이해도</b>: {Res_Literacy.Grade}<span style={{color: '#A7A8A3', fontSize: '0.8rem', fontWeight:'800'}}> / 2등급</span></p>\n                        <p><b>투자 경험</b>: {Res_Experience.Grade}<span style={{color: '#A7A8A3', fontSize: '0.8rem', fontWeight:'800'}}> / 2등급</span></p>\n                    </div>\n\n                    <div className='Bag'>\n                        <div className='Items'>\n                            <div className='ItemImg'>                                \n                                <img width={42} height={42} src={Res_Literacy.Img} alt='무기 이미지'/> \n                            </div>\n                            <div style={{marginTop: 'auto', marginBottom:'auto', marginLeft:'0.5rem'}}>\n                                <b>{Res_Literacy.Weapon}</b> <br/>\n                                {Res_Literacy.Level}\n                            </div>\n                        </div>\n                        <div className='Items'>\n                            <div className='ItemImg'>\n                                <img width={42} height={42} src={Res_Tolerance.Img} alt='방패 이미지'/>  \n                            </div>\n                            <div style={{marginTop: 'auto', marginBottom:'auto', marginLeft:'0.5rem'}}>\n                                <b>{Res_Tolerance.Shield}</b> <br/>\n                                {Res_Tolerance.Level}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ComposedChart width={400} height={250} margin={{top: 20, bottom: 20}} data={data}>\n                    <XAxis dataKey=\"year\" tick={{fontSize: 10}} padding={{right: 20}}/>\n                    <YAxis unit={covUnits} tick={{fontSize: 10}} padding={{bottom: 10}} />\n                    <Tooltip />\n                    <Legend tick={{fontSize: 10}} />\n                    <CartesianGrid stroke=\"#f4f4f4\" />\n                    <Area type=\"monotone\" dataKey=\"예상수익범위\" fill=\"#FFB950\" stroke=\"#FFB950\" />\n                    <Line type=\"monotone\" dataKey=\"예상수익\" stroke=\"#1D1A82\" />\n                </ComposedChart>\n                {/* 캐릭터 설명 +  */}\n                <div>\n                <p>{Type.Content}</p>\n                </div>\n            </div>\n            </div>\n            <NextButton Path={\"/\"} Per={0} Pur={0} Tol={0} Lit={0} Exp={0} Text={'테스트 다시하기'}/>\n            <div style={{fontSize: '0.8rem', color: '#A7A8A3', textAlign:'left', padding: '1rem'}}>\n            - 칼과 방패는 각각 금융이해도와 위험감내도로 정해집니다. <br/>\n            </div>\n        </div>\n        </div>\n    );\n}\n\nexport default Final_Result;\n","/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/content/FinalTYPE.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q18.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q17.js",[],[],"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/ScrollToTop.js",[],[],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"188","replacedBy":"192"},{"ruleId":"190","replacedBy":"193"},{"ruleId":"188","replacedBy":"194"},{"ruleId":"190","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":11,"column":12,"nodeType":"198","messageId":"199","endLine":11,"endColumn":13},{"ruleId":"188","replacedBy":"200"},{"ruleId":"190","replacedBy":"201"},{"ruleId":"188","replacedBy":"202"},{"ruleId":"190","replacedBy":"203"},{"ruleId":"188","replacedBy":"204"},{"ruleId":"190","replacedBy":"205"},{"ruleId":"196","severity":1,"message":"197","line":11,"column":12,"nodeType":"198","messageId":"199","endLine":11,"endColumn":13},{"ruleId":"196","severity":1,"message":"197","line":12,"column":12,"nodeType":"198","messageId":"199","endLine":12,"endColumn":13},{"ruleId":"196","severity":1,"message":"206","line":80,"column":11,"nodeType":"198","messageId":"199","endLine":80,"endColumn":17},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],["207"],["208"],["207"],["208"],"no-unused-vars","'a' is assigned a value but never used.","Identifier","unusedVar",["207"],["208"],["207"],["208"],["207"],["208"],"'Gender' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]