{"ast":null,"code":"import _slicedToArray from\"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import Box from\"@mui/material/Box\";import Typography from\"@mui/material/Typography\";import Slider from\"@mui/material/Slider\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SliderSel(_ref){var QnA=_ref.QnA,getResponse=_ref.getResponse;var _useState=useState(10),_useState2=_slicedToArray(_useState,2),Resp=_useState2[0],getResp=_useState2[1];QnA.status=true;function valueLabelFormat(Resp){var units=[\"만원\",\"억원\"];var unitIndex=0;var scaledValue=Resp;if(scaledValue<10000){scaledValue=Math.round(scaledValue/10)*10;}while(scaledValue>=10000&&unitIndex<units.length-1){unitIndex+=1;scaledValue/=10000;}return\"\".concat(parseInt(scaledValue),\" \").concat(units[unitIndex]);}function calculateValue(Resp){return 10*Math.pow(10,Resp/25);}var handleChange=function handleChange(event,newValue){if(typeof newValue===\"number\"){getResp(newValue);}};getResponse(Math.round(calculateValue(Resp)/10)*10);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"Content\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"page\",children:QnA.questionID}),/*#__PURE__*/_jsxs(\"h1\",{className:\"question\",children:[\" \",QnA.Question]}),/*#__PURE__*/_jsxs(Box,{sx:{width:300,display:\"inline-block\"},children:[/*#__PURE__*/_jsxs(Typography,{id:\"non-linear-slider\",gutterBottom:true,children:[\"\\uD22C\\uC790 \\uAE08\\uC561: \",valueLabelFormat(calculateValue(Resp))]}),/*#__PURE__*/_jsx(Slider,{value:Resp,min:0,step:0.02,max:100,scale:calculateValue,getAriaValueText:valueLabelFormat,valueLabelFormat:valueLabelFormat,onChange:handleChange,\"aria-labelledby\":\"non-linear-slider\"})]})]})});}export default SliderSel;","map":{"version":3,"sources":["/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/SliderSel.js"],"names":["React","useState","Box","Typography","Slider","SliderSel","QnA","getResponse","Resp","getResp","status","valueLabelFormat","units","unitIndex","scaledValue","Math","round","length","parseInt","calculateValue","pow","handleChange","event","newValue","questionID","Question","width","display"],"mappings":"+IAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,C,wFAEA,QAASC,CAAAA,SAAT,MAAyC,IAApBC,CAAAA,GAAoB,MAApBA,GAAoB,CAAfC,WAAe,MAAfA,WAAe,CACvC,cAAwBN,QAAQ,CAAC,EAAD,CAAhC,wCAAOO,IAAP,eAAaC,OAAb,eACAH,GAAG,CAACI,MAAJ,CAAa,IAAb,CAEA,QAASC,CAAAA,gBAAT,CAA0BH,IAA1B,CAAgC,CAC9B,GAAMI,CAAAA,KAAK,CAAG,CAAC,IAAD,CAAO,IAAP,CAAd,CAEA,GAAIC,CAAAA,SAAS,CAAG,CAAhB,CACA,GAAIC,CAAAA,WAAW,CAAGN,IAAlB,CAEA,GAAIM,WAAW,CAAG,KAAlB,CAAyB,CACvBA,WAAW,CAAGC,IAAI,CAACC,KAAL,CAAWF,WAAW,CAAG,EAAzB,EAA+B,EAA7C,CACD,CAED,MAAOA,WAAW,EAAI,KAAf,EAAwBD,SAAS,CAAGD,KAAK,CAACK,MAAN,CAAe,CAA1D,CAA6D,CAC3DJ,SAAS,EAAI,CAAb,CACAC,WAAW,EAAI,KAAf,CACD,CACD,gBAAUI,QAAQ,CAACJ,WAAD,CAAlB,aAAmCF,KAAK,CAACC,SAAD,CAAxC,EACD,CAED,QAASM,CAAAA,cAAT,CAAwBX,IAAxB,CAA8B,CAC5B,MAAO,IAAKO,IAAI,CAACK,GAAL,CAAS,EAAT,CAAaZ,IAAI,CAAG,EAApB,CAAZ,CACD,CAED,GAAMa,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,QAAR,CAAqB,CACxC,GAAI,MAAOA,CAAAA,QAAP,GAAoB,QAAxB,CAAkC,CAChCd,OAAO,CAACc,QAAD,CAAP,CACD,CACF,CAJD,CAMAhB,WAAW,CAACQ,IAAI,CAACC,KAAL,CAAWG,cAAc,CAACX,IAAD,CAAd,CAAuB,EAAlC,EAAwC,EAAzC,CAAX,CAEA,mBACE,kCACE,aAAK,SAAS,CAAC,SAAf,wBACE,WAAI,SAAS,CAAC,MAAd,UAAsBF,GAAG,CAACkB,UAA1B,EADF,cAEE,YAAI,SAAS,CAAC,UAAd,eAA2BlB,GAAG,CAACmB,QAA/B,GAFF,cAGE,MAAC,GAAD,EAAK,EAAE,CAAE,CAAEC,KAAK,CAAE,GAAT,CAAcC,OAAO,CAAE,cAAvB,CAAT,wBACE,MAAC,UAAD,EAAY,EAAE,CAAC,mBAAf,CAAmC,YAAY,KAA/C,yCACUhB,gBAAgB,CAACQ,cAAc,CAACX,IAAD,CAAf,CAD1B,GADF,cAIE,KAAC,MAAD,EACE,KAAK,CAAEA,IADT,CAEE,GAAG,CAAE,CAFP,CAGE,IAAI,CAAE,IAHR,CAIE,GAAG,CAAE,GAJP,CAKE,KAAK,CAAEW,cALT,CAME,gBAAgB,CAAER,gBANpB,CAOE,gBAAgB,CAAEA,gBAPpB,CAQE,QAAQ,CAAEU,YARZ,CASE,kBAAgB,mBATlB,EAJF,GAHF,GADF,EADF,CAwBD,CAED,cAAehB,CAAAA,SAAf","sourcesContent":["import React, {useState} from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Slider from \"@mui/material/Slider\";\n\nfunction SliderSel({ QnA, getResponse }) {\n  const [Resp, getResp] = useState(10);\n  QnA.status = true;\n\n  function valueLabelFormat(Resp) {\n    const units = [\"만원\", \"억원\"];\n\n    let unitIndex = 0;\n    let scaledValue = Resp;\n\n    if (scaledValue < 10000) {\n      scaledValue = Math.round(scaledValue / 10) * 10;\n    }\n\n    while (scaledValue >= 10000 && unitIndex < units.length - 1) {\n      unitIndex += 1;\n      scaledValue /= 10000;\n    }\n    return `${parseInt(scaledValue)} ${units[unitIndex]}`;\n  }\n\n  function calculateValue(Resp) {\n    return 10 * Math.pow(10, Resp / 25);\n  }\n\n  const handleChange = (event, newValue) => {\n    if (typeof newValue === \"number\") {\n      getResp(newValue);\n    }\n  };\n\n  getResponse(Math.round(calculateValue(Resp) / 10) * 10);\n\n  return (\n    <div>\n      <div className=\"Content\">\n        <h3 className=\"page\">{QnA.questionID}</h3>\n        <h1 className=\"question\"> {QnA.Question}</h1>\n        <Box sx={{ width: 300, display: \"inline-block\" }}>\n          <Typography id=\"non-linear-slider\" gutterBottom>\n            투자 금액: {valueLabelFormat(calculateValue(Resp))}\n          </Typography>\n          <Slider\n            value={Resp}\n            min={0}\n            step={0.02}\n            max={100}\n            scale={calculateValue}\n            getAriaValueText={valueLabelFormat}\n            valueLabelFormat={valueLabelFormat}\n            onChange={handleChange}\n            aria-labelledby=\"non-linear-slider\"\n          />\n        </Box>\n      </div>\n    </div>\n  );\n}\n\nexport default SliderSel;\n"]},"metadata":{},"sourceType":"module"}