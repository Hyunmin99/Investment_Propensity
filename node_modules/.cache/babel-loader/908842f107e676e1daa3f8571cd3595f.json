{"ast":null,"code":"//단리\nexport function Simple(_ref) {\n  let {\n    P,\n    r,\n    t\n  } = _ref;\n  return P + r / 100 * P * t;\n} //복리\n\n_c = Simple;\nexport function Compound(P, r, t) {\n  console.log(P, r, t);\n  return P * (r / 100 + 1) ** t;\n} //적립식 복리\n\n_c2 = Compound;\nexport function Contribute(_ref2) {\n  let {\n    PMT,\n    r,\n    t\n  } = _ref2;\n\n  if (r !== 0) {\n    return PMT * ((1 + r / 100) ** t - 1) / (r / 100);\n  } else {\n    //이자율이 0인 경우, 계산식 분모에 0이 들어가면서 값이 무한대로 수렴 -> 예외처리\n    return PMT * t;\n  }\n} //현재가치\n\n_c3 = Contribute;\nexport function PV(_ref3) {\n  let {\n    FV,\n    t\n  } = _ref3;\n  const inflationRate = 2;\n  return FV / (1 + inflationRate / 100) ** t;\n} // export default { Simple, Compound, Contribute, PV };\n\n_c4 = PV;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Simple\");\n$RefreshReg$(_c2, \"Compound\");\n$RefreshReg$(_c3, \"Contribute\");\n$RefreshReg$(_c4, \"PV\");","map":{"version":3,"sources":["/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/calculate/Formula.js"],"names":["Simple","P","r","t","Compound","console","log","Contribute","PMT","PV","FV","inflationRate"],"mappings":"AAAA;AACA,OAAO,SAASA,MAAT,OAA2B;AAAA,MAAX;AAACC,IAAAA,CAAD;AAAIC,IAAAA,CAAJ;AAAOC,IAAAA;AAAP,GAAW;AAChC,SAAOF,CAAC,GAAIC,CAAC,GAAG,GAAL,GAAYD,CAAZ,GAAgBE,CAA3B;AACD,C,CAED;;KAJgBH,M;AAKhB,OAAO,SAASI,QAAT,CAAkBH,CAAlB,EAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;AAChCE,EAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB;AACA,SAAOF,CAAC,GAAG,CAACC,CAAC,GAAG,GAAJ,GAAU,CAAX,KAAiBC,CAA5B;AACD,C,CAED;;MALgBC,Q;AAMhB,OAAO,SAASG,UAAT,QAAiC;AAAA,MAAb;AAACC,IAAAA,GAAD;AAAMN,IAAAA,CAAN;AAASC,IAAAA;AAAT,GAAa;;AACtC,MAAID,CAAC,KAAK,CAAV,EAAa;AACX,WAAQM,GAAG,IAAI,CAAC,IAAIN,CAAC,GAAG,GAAT,KAAiBC,CAAjB,GAAqB,CAAzB,CAAJ,IAAoCD,CAAC,GAAG,GAAxC,CAAP;AACD,GAFD,MAEO;AACL;AACA,WAAOM,GAAG,GAAGL,CAAb;AACD;AACF,C,CAED;;MATgBI,U;AAUhB,OAAO,SAASE,EAAT,QAAqB;AAAA,MAAT;AAACC,IAAAA,EAAD;AAAKP,IAAAA;AAAL,GAAS;AAC1B,QAAMQ,aAAa,GAAG,CAAtB;AACA,SAAOD,EAAE,GAAG,CAAC,IAAIC,aAAa,GAAG,GAArB,KAA6BR,CAAzC;AACD,C,CAED;;MALgBM,E","sourcesContent":["//단리\nexport function Simple({P, r, t}) {\n  return P + (r / 100) * P * t;\n}\n\n//복리\nexport function Compound(P, r, t) {\n  console.log(P, r, t);\n  return P * (r / 100 + 1) ** t;\n}\n\n//적립식 복리\nexport function Contribute({PMT, r, t}) {\n  if (r !== 0) {\n    return (PMT * ((1 + r / 100) ** t - 1)) / (r / 100);\n  } else {\n    //이자율이 0인 경우, 계산식 분모에 0이 들어가면서 값이 무한대로 수렴 -> 예외처리\n    return PMT * t;\n  }\n}\n\n//현재가치\nexport function PV({FV, t}) {\n  const inflationRate = 2;\n  return FV / (1 + inflationRate / 100) ** t;\n}\n\n// export default { Simple, Compound, Contribute, PV };"]},"metadata":{},"sourceType":"module"}