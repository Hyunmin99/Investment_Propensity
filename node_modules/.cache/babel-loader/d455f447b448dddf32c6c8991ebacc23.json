{"ast":null,"code":"var _jsxFileName = \"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q17.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../App.css';\nimport Header from '../component/Header';\nimport NextButton from '../component/NextButton';\nimport QNA from '../content/QNA';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QnA = QNA[16];\n\nfunction Q17(props) {\n  _s();\n\n  const Res = props.location.state.Res; // console.log(Res);\n\n  const [Response, getResponse] = useState(10);\n  const [Sel, setSel] = useState(false);\n\n  function SelButton(_ref) {\n    let {\n      Answer\n    } = _ref;\n    const id = Answer.id;\n    const answer = Answer.Answer;\n\n    const onClick = () => {\n      QnA.Answers.map(answer => answer.State = false);\n      Answer.State = !Answer.State;\n      setSel(true);\n      console.log(answer);\n      getResponse(id);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'sel-button',\n        onClick: onClick,\n        style: {\n          backgroundColor: Answer.State ? '#1d1a82' : '#F7F7F7',\n          color: Answer.State && 'White'\n        },\n        children: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n  Res[QnA.page] = Response;\n\n  function valueLabelFormat(Response) {\n    const units = ['만원', '억'];\n    let unitIndex = 0;\n    let scaledValue = Response;\n\n    while (scaledValue >= 1000 && unitIndex < units.length - 1) {\n      unitIndex += 1;\n      scaledValue /= 10;\n    }\n\n    return `${scaledValue} ${units[unitIndex]}`;\n  }\n\n  function calculateValue(Response) {\n    return 10 ** Response;\n  }\n\n  const handleChange = (event, newValue) => {\n    if (typeof newValue === 'number') {\n      getResponse(newValue);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"page\",\n        children: QnA.page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"question\",\n        children: [\" \", QnA.Question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: 250\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"non-linear-slider\",\n          gutterBottom: true,\n          children: [\"Storage: \", valueLabelFormat(calculateValue(Response))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          value: Response,\n          min: 5,\n          step: 1,\n          max: 30,\n          scale: calculateValue,\n          getAriaValueText: valueLabelFormat,\n          valueLabelFormat: valueLabelFormat,\n          onChange: handleChange,\n          valueLabelDisplay: \"auto\",\n          \"aria-labelledby\": \"non-linear-slider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        Path: \"/q18\",\n        Res: Res,\n        Text: 'Next'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Q17, \"LLH2JPNnP2IEmCMc8eCSv76qdo0=\");\n\n_c = Q17;\nexport default Q17;\n\nvar _c;\n\n$RefreshReg$(_c, \"Q17\");","map":{"version":3,"sources":["/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q17.js"],"names":["React","useState","Header","NextButton","QNA","Box","Typography","Slider","QnA","Q17","props","Res","location","state","Response","getResponse","Sel","setSel","SelButton","Answer","id","answer","onClick","Answers","map","State","console","log","backgroundColor","color","page","valueLabelFormat","units","unitIndex","scaledValue","length","calculateValue","handleChange","event","newValue","Question","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport '../App.css';\nimport Header from '../component/Header';\nimport NextButton from '../component/NextButton';\nimport QNA from '../content/QNA'\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\n\nconst QnA = QNA[16];\n\nfunction Q17(props) {\n  const Res = props.location.state.Res;\n  // console.log(Res);\n\n  const [Response, getResponse] = useState(10);\n  const [Sel, setSel] = useState(false);\n\n  function SelButton({ Answer }) {\n    const id = Answer.id;\n    const answer = Answer.Answer;\n\n    const onClick = () => {\n      QnA.Answers.map(answer => (\n          answer.State = false\n      ));\n      Answer.State = !Answer.State;\n      setSel(true);\n      console.log(answer);\n      getResponse(id);\n    }\n    return (\n      <div>\n        <button className={'sel-button'} onClick={ onClick } style={{backgroundColor: Answer.State ? '#1d1a82':'#F7F7F7', color: Answer.State && 'White'}}>{answer}</button>\n      </div>\n    );\n  }\n  \n  Res[QnA.page] = Response;\n\n  function valueLabelFormat(Response) {\n    const units = ['만원', '억'];\n  \n    let unitIndex = 0;\n    let scaledValue = Response;\n  \n    while (scaledValue >= 1000 && unitIndex < units.length - 1) {\n      unitIndex += 1;\n      scaledValue /= 10;\n    }\n  \n    return `${scaledValue} ${units[unitIndex]}`;\n  }\n\n  function calculateValue(Response) {\n    return 10 ** Response;\n  }\n\n  const handleChange = (event, newValue) => {\n    if (typeof newValue === 'number') {\n      getResponse(newValue);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className='Content'>\n        <h3 className='page'>{ QnA.page }</h3> \n        <h1 className='question'> { QnA.Question }</h1>\n        {/* <div style={{width: '24rem', margin: '3rem', display:'inline-flex'}}> */}\n        <Box sx={{ width: 250 }}>\n          <Typography id=\"non-linear-slider\" gutterBottom>\n            Storage: {valueLabelFormat(calculateValue(Response))}\n          </Typography>\n          <Slider\n            value={Response}\n            min={5}\n            step={1}\n            max={30}\n            scale={calculateValue}\n            getAriaValueText={valueLabelFormat}\n            valueLabelFormat={valueLabelFormat}\n            onChange={handleChange}\n            valueLabelDisplay=\"auto\"\n            aria-labelledby=\"non-linear-slider\"\n          />\n        </Box>\n        <NextButton Path={\"/q18\"} Res={Res} Text={'Next'}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Q17;\n"]},"metadata":{},"sourceType":"module"}