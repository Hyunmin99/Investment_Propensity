{"ast":null,"code":"var _jsxFileName = \"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/Graph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ComposedChart, XAxis, YAxis, Tooltip, Legend, CartesianGrid, Area, Line } from 'recharts';\nimport Box from '@mui/material/Box';\nimport Slider from '@mui/material/Slider';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Graph(_ref) {\n  _s();\n\n  let {\n    P,\n    Min,\n    Max,\n    Rev\n  } = _ref;\n  //단리, 복리 => 년 단위로 계산\n  //적립식 복리 : Compound + Contribute\n  const Year = [0, 5, 10, 15, 20, 25, 30, 35, 40];\n  const Contribution = [0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000]; //적립금액\n\n  const inflationRate = 2; //물가 상승률\n\n  function cov_Money(Money) {\n    let scaledValue = Money;\n\n    if (scaledValue < 10000) {\n      scaledValue = Math.round(scaledValue / 10) * 10;\n    }\n\n    while (scaledValue >= 10000) {\n      scaledValue /= 10000;\n    }\n\n    return parseInt(scaledValue);\n  }\n\n  function cov_Units(Money) {\n    const units = ['만원', '억원'];\n    let unitIndex = 0;\n\n    while (Money >= 10000 && unitIndex < units.length - 1) {\n      unitIndex += 1;\n      Money /= 10000;\n    }\n\n    return units[unitIndex];\n  }\n\n  const covMoney = cov_Money(P);\n  const covUnits = cov_Units(P);\n  const [Period, getPeriod] = useState(15);\n  const [PMT, getPMT] = useState(0); //소수점 둘째 자리 반올림\n\n  function round_two(float) {\n    return Math.round(float * 1e2) / 1e2;\n  } //단리 공식\n\n\n  function formula_Simple(r, t) {\n    return covMoney + r / 100 * covMoney * t;\n  } //복리 공식\n\n\n  function formula_Compound(r, t) {\n    return covMoney * (r / 100 + 1) ** t;\n  } //적립식 복리 공식\n\n\n  function formula_Contribute(r, t) {\n    const pmt = covUnits === '억원' ? PMT / 10000 : PMT;\n    return pmt * ((1 + r / 100) ** t - 1) / (r / 100);\n  } //현재가치 공식\n\n\n  function formula_PV(FV, t) {\n    return FV / (1 + inflationRate / 100) ** t;\n  } //단리 계산기\n\n\n  function Cal_Simple(t) {\n    const MIN_VALUE = formula_Simple(Min, t);\n    const MAX_VALUE = formula_Simple(Max, t);\n    const REV_VALUE = formula_Simple(Rev, t);\n    const obj = {\n      \"year\": t + '년',\n      \"예상수익범위\": [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n      \"예상수익\": round_two(REV_VALUE),\n      \"현재가치\": round_two(formula_PV(REV_VALUE, t))\n    };\n    return obj;\n  } //복리 계산기\n  //*년복리\n\n\n  function Cal_Compound(t) {\n    const MIN_VALUE = formula_Compound(Min, t);\n    const MAX_VALUE = formula_Compound(Max, t);\n    const REV_VALUE = formula_Compound(Rev, t);\n    const obj = {\n      \"year\": t + '년',\n      \"예상수익범위\": [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n      \"예상수익\": round_two(REV_VALUE),\n      \"현재가치\": round_two(formula_PV(REV_VALUE, t))\n    };\n    return obj;\n  } //적립식 복리 계산기\n  //*년복리\n\n\n  function Cal_Compound_Contribution(t) {\n    const MIN_VALUE = formula_Compound(Min, t) + formula_Contribute(Min, t);\n    const MAX_VALUE = formula_Compound(Max, t) + formula_Contribute(Max, t);\n    const REV_VALUE = formula_Compound(Rev, t) + formula_Contribute(Rev, t);\n    const obj = {\n      \"year\": t + '년',\n      \"예상수익범위\": [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n      \"예상수익\": round_two(REV_VALUE),\n      \"현재가치\": round_two(formula_PV(REV_VALUE, t))\n    };\n    return obj;\n  } //데이터 세팅\n\n\n  const data = Year.map(function (t) {\n    return Cal_Compound_Contribution(t);\n  }); //기간 세팅\n\n  function valueText(value) {\n    return `${value}년 뒤`;\n  } //Slider handleChange\n\n\n  const SLI_handleChange = (event, newValue) => {\n    if (typeof newValue === 'number') {\n      getPeriod(newValue);\n    }\n  }; //Contribution handleChange\n\n\n  const CON_handleChange = event => {\n    getPMT(event.target.value);\n  }; //Period handleChange\n\n\n  const PER_handleChange = event => {\n    getPeriod(event.target.value);\n  }; //Dialog part\n\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason !== 'backdropClick') {\n      setOpen(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ComposedChart, {\n      width: 400,\n      height: 250,\n      margin: {\n        top: 20,\n        bottom: 20\n      },\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"year\",\n        tick: {\n          fontSize: 10\n        },\n        padding: {\n          right: 20\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        unit: covUnits,\n        tick: {\n          fontSize: 10\n        },\n        padding: {\n          bottom: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        tick: {\n          fontSize: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        stroke: \"#f4f4f4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Area, {\n        unit: covUnits,\n        type: \"monotone\",\n        dataKey: \"\\uC608\\uC0C1\\uC218\\uC775\\uBC94\\uC704\",\n        fill: \"#FFB950\",\n        stroke: \"#FFB950\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        unit: covUnits,\n        type: \"monotone\",\n        dataKey: \"\\uC608\\uC0C1\\uC218\\uC775\",\n        stroke: \"#1D1A82\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        unit: covUnits,\n        type: \"monotone\",\n        dataKey: \"\\uD604\\uC7AC\\uAC00\\uCE58\",\n        stroke: \"#B45CCA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Discription\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginRight: '0.3rem'\n        },\n        children: \"\\uB9E4\\uB144 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"standard\",\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"contribution-select-label\",\n            id: \"contribution-select\",\n            value: PMT,\n            label: \"\\uB9CC\\uC6D0\",\n            onChange: CON_handleChange,\n            defaultValue: 0,\n            children: Contribution.map((Value, index) => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: Value,\n                children: [Value, \"\\uB9CC\\uC6D0\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 40\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: '0.3rem',\n          marginRight: '0.3rem'\n        },\n        children: \" \\uC744 \\uC801\\uB9BD\\uD588\\uC744 \\uB54C \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"standard\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"year-select-label\",\n            id: \"year-select\",\n            value: Period,\n            label: \"\\uB144\",\n            onChange: PER_handleChange,\n            defaultValue: 0,\n            children: Year.map((Value, index) => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: Value,\n                children: [Value, \"\\uB144\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 40\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" \\uB4A4\\uC758 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\uC608\\uC0C1\\uC218\\uC775\\uC740 \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [data[Period / 5].예상수익, covUnits]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 29\n        }, this), \"\\uC785\\uB2C8\\uB2E4.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 79\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"(\\uD604\\uC7AC\\uAC00\\uCE58: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [data[Period / 5].현재가치, covUnits]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 30\n        }, this), \" )\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Graph, \"gtC87ZAjP0I11y2xhmD4U/Ew5hA=\");\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/Graph.js"],"names":["React","useState","ComposedChart","XAxis","YAxis","Tooltip","Legend","CartesianGrid","Area","Line","Box","Slider","InputLabel","MenuItem","FormControl","Select","Button","Dialog","DialogActions","DialogContent","DialogTitle","Graph","P","Min","Max","Rev","Year","Contribution","inflationRate","cov_Money","Money","scaledValue","Math","round","parseInt","cov_Units","units","unitIndex","length","covMoney","covUnits","Period","getPeriod","PMT","getPMT","round_two","float","formula_Simple","r","t","formula_Compound","formula_Contribute","pmt","formula_PV","FV","Cal_Simple","MIN_VALUE","MAX_VALUE","REV_VALUE","obj","Cal_Compound","Cal_Compound_Contribution","data","map","valueText","value","SLI_handleChange","event","newValue","CON_handleChange","target","PER_handleChange","open","setOpen","handleClickOpen","handleClose","reason","top","bottom","fontSize","right","marginRight","display","Value","index","marginLeft","예상수익","현재가치"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,OAAtC,EAA+CC,MAA/C,EAAuDC,aAAvD,EAAsEC,IAAtE,EAA4EC,IAA5E,QAAwF,UAAxF;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;AAEA,SAASC,KAAT,OAAqC;AAAA;;AAAA,MAAtB;AAAEC,IAAAA,CAAF;AAAKC,IAAAA,GAAL;AAAUC,IAAAA,GAAV;AAAeC,IAAAA;AAAf,GAAsB;AACjC;AACA;AACA,QAAMC,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,EAA/B,CAAb;AACA,QAAMC,YAAY,GAAG,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,EAA6B,GAA7B,EAAkC,GAAlC,EAAuC,GAAvC,EAA4C,GAA5C,EAAiD,IAAjD,CAArB,CAJiC,CAI4C;;AAC7E,QAAMC,aAAa,GAAG,CAAtB,CALiC,CAKR;;AACzB,WAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAEtB,QAAIC,WAAW,GAAGD,KAAlB;;AAEA,QAAGC,WAAW,GAAG,KAAjB,EAAwB;AACtBA,MAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWF,WAAW,GAAC,EAAvB,IAA2B,EAAzC;AACD;;AAED,WAAOA,WAAW,IAAI,KAAtB,EAA6B;AACzBA,MAAAA,WAAW,IAAI,KAAf;AACH;;AACD,WAAOG,QAAQ,CAACH,WAAD,CAAf;AACH;;AAED,WAASI,SAAT,CAAmBL,KAAnB,EAA0B;AACtB,UAAMM,KAAK,GAAG,CAAC,IAAD,EAAO,IAAP,CAAd;AACA,QAAIC,SAAS,GAAG,CAAhB;;AAEA,WAAOP,KAAK,IAAI,KAAT,IAAkBO,SAAS,GAAGD,KAAK,CAACE,MAAN,GAAe,CAApD,EAAuD;AACnDD,MAAAA,SAAS,IAAI,CAAb;AACAP,MAAAA,KAAK,IAAI,KAAT;AACH;;AACD,WAAOM,KAAK,CAACC,SAAD,CAAZ;AACH;;AAED,QAAME,QAAQ,GAAGV,SAAS,CAACP,CAAD,CAA1B;AACA,QAAMkB,QAAQ,GAAGL,SAAS,CAACb,CAAD,CAA1B;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBzC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC0C,GAAD,EAAMC,MAAN,IAAgB3C,QAAQ,CAAC,CAAD,CAA9B,CAlCiC,CAoCjC;;AACA,WAAS4C,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,WAAOd,IAAI,CAACC,KAAL,CAAWa,KAAK,GAAG,GAAnB,IAA0B,GAAjC;AACH,GAvCgC,CAwCjC;;;AACA,WAASC,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8B;AAC1B,WAAOV,QAAQ,GAAES,CAAC,GAAC,GAAF,GAAMT,QAAP,GAAkBU,CAAlC;AACH,GA3CgC,CA4CjC;;;AACA,WAASC,gBAAT,CAA0BF,CAA1B,EAA6BC,CAA7B,EAAgC;AAC5B,WAAOV,QAAQ,GAAE,CAACS,CAAC,GAAC,GAAF,GAAM,CAAP,KAAWC,CAA5B;AACH,GA/CgC,CAgDjC;;;AACA,WAASE,kBAAT,CAA4BH,CAA5B,EAA+BC,CAA/B,EAAkC;AAC9B,UAAMG,GAAG,GAAGZ,QAAQ,KAAK,IAAb,GAAqBG,GAAG,GAAC,KAAzB,GAAkCA,GAA9C;AACA,WAAOS,GAAG,IAAK,CAAC,IAAIJ,CAAC,GAAC,GAAP,KAAeC,CAAhB,GAAoB,CAAxB,CAAH,IAAiCD,CAAC,GAAC,GAAnC,CAAP;AACH,GApDgC,CAqDjC;;;AACA,WAASK,UAAT,CAAoBC,EAApB,EAAwBL,CAAxB,EAA2B;AACvB,WAAOK,EAAE,GAAI,CAAC,IAAE1B,aAAa,GAAC,GAAjB,KAAuBqB,CAApC;AACH,GAxDgC,CA0DjC;;;AACA,WAASM,UAAT,CAAoBN,CAApB,EAAuB;AACnB,UAAMO,SAAS,GAAGT,cAAc,CAACxB,GAAD,EAAM0B,CAAN,CAAhC;AACA,UAAMQ,SAAS,GAAGV,cAAc,CAACvB,GAAD,EAAMyB,CAAN,CAAhC;AACA,UAAMS,SAAS,GAAGX,cAAc,CAACtB,GAAD,EAAMwB,CAAN,CAAhC;AACA,UAAMU,GAAG,GAAG;AACR,cAAQV,CAAC,GAAC,GADF;AAER,gBAAU,CAACJ,SAAS,CAACW,SAAD,CAAV,EAAuBX,SAAS,CAACY,SAAD,CAAhC,CAFF;AAGR,cAAQZ,SAAS,CAACa,SAAD,CAHT;AAIR,cAAQb,SAAS,CAACQ,UAAU,CAACK,SAAD,EAAYT,CAAZ,CAAX;AAJT,KAAZ;AAMA,WAAOU,GAAP;AACH,GAtEgC,CAwEjC;AACA;;;AACA,WAASC,YAAT,CAAsBX,CAAtB,EAAyB;AACrB,UAAMO,SAAS,GAAGN,gBAAgB,CAAC3B,GAAD,EAAM0B,CAAN,CAAlC;AACA,UAAMQ,SAAS,GAAGP,gBAAgB,CAAC1B,GAAD,EAAMyB,CAAN,CAAlC;AACA,UAAMS,SAAS,GAAGR,gBAAgB,CAACzB,GAAD,EAAMwB,CAAN,CAAlC;AACA,UAAMU,GAAG,GAAG;AACR,cAAQV,CAAC,GAAC,GADF;AAER,gBAAU,CAACJ,SAAS,CAACW,SAAD,CAAV,EAAuBX,SAAS,CAACY,SAAD,CAAhC,CAFF;AAGR,cAAQZ,SAAS,CAACa,SAAD,CAHT;AAIR,cAAQb,SAAS,CAACQ,UAAU,CAACK,SAAD,EAAYT,CAAZ,CAAX;AAJT,KAAZ;AAMA,WAAOU,GAAP;AACH,GArFgC,CAuFjC;AACA;;;AACA,WAASE,yBAAT,CAAmCZ,CAAnC,EAAsC;AAClC,UAAMO,SAAS,GAAGN,gBAAgB,CAAC3B,GAAD,EAAM0B,CAAN,CAAhB,GAA2BE,kBAAkB,CAAC5B,GAAD,EAAM0B,CAAN,CAA/D;AACA,UAAMQ,SAAS,GAAGP,gBAAgB,CAAC1B,GAAD,EAAMyB,CAAN,CAAhB,GAA2BE,kBAAkB,CAAC3B,GAAD,EAAMyB,CAAN,CAA/D;AACA,UAAMS,SAAS,GAAGR,gBAAgB,CAACzB,GAAD,EAAMwB,CAAN,CAAhB,GAA2BE,kBAAkB,CAAC1B,GAAD,EAAMwB,CAAN,CAA/D;AACA,UAAMU,GAAG,GAAG;AACR,cAAQV,CAAC,GAAC,GADF;AAER,gBAAU,CAACJ,SAAS,CAACW,SAAD,CAAV,EAAuBX,SAAS,CAACY,SAAD,CAAhC,CAFF;AAGR,cAAQZ,SAAS,CAACa,SAAD,CAHT;AAIR,cAAQb,SAAS,CAACQ,UAAU,CAACK,SAAD,EAAYT,CAAZ,CAAX;AAJT,KAAZ;AAMA,WAAOU,GAAP;AACH,GApGgC,CAsGjC;;;AACA,QAAMG,IAAI,GAAGpC,IAAI,CAACqC,GAAL,CAAS,UAASd,CAAT,EAAW;AAC7B,WAAOY,yBAAyB,CAACZ,CAAD,CAAhC;AACH,GAFY,CAAb,CAvGiC,CA2GjC;;AACA,WAASe,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,WAAQ,GAAEA,KAAM,KAAhB;AACH,GA9GgC,CAgHjC;;;AACA,QAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC1C,QAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChC1B,MAAAA,SAAS,CAAC0B,QAAD,CAAT;AACD;AACJ,GAJD,CAjHiC,CAuHjC;;;AACA,QAAMC,gBAAgB,GAAIF,KAAD,IAAW;AAChCvB,IAAAA,MAAM,CAACuB,KAAK,CAACG,MAAN,CAAaL,KAAd,CAAN;AACH,GAFD,CAxHiC,CA4HjC;;;AACA,QAAMM,gBAAgB,GAAIJ,KAAD,IAAW;AAChCzB,IAAAA,SAAS,CAACyB,KAAK,CAACG,MAAN,CAAaL,KAAd,CAAT;AACH,GAFD,CA7HiC,CAiIjC;;;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBzE,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;;AACA,QAAMyE,eAAe,GAAG,MAAM;AAC1BD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAGA,QAAME,WAAW,GAAG,CAACR,KAAD,EAAQS,MAAR,KAAmB;AACnC,QAAIA,MAAM,KAAK,eAAf,EAAgC;AAC5BH,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACN,GAJD;;AAMA,sBACI;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAE,GAAtB;AAA2B,MAAA,MAAM,EAAE,GAAnC;AAAwC,MAAA,MAAM,EAAE;AAACI,QAAAA,GAAG,EAAE,EAAN;AAAUC,QAAAA,MAAM,EAAE;AAAlB,OAAhD;AAAuE,MAAA,IAAI,EAAEhB,IAA7E;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,MAAf;AAAsB,QAAA,IAAI,EAAE;AAACiB,UAAAA,QAAQ,EAAE;AAAX,SAA5B;AAA4C,QAAA,OAAO,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR;AAArD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAExC,QAAb;AAAuB,QAAA,IAAI,EAAE;AAACuC,UAAAA,QAAQ,EAAE;AAAX,SAA7B;AAA6C,QAAA,OAAO,EAAE;AAACD,UAAAA,MAAM,EAAE;AAAT;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX;AAAd;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,aAAD;AAAe,QAAA,MAAM,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEvC,QAAZ;AAAsB,QAAA,IAAI,EAAC,UAA3B;AAAsC,QAAA,OAAO,EAAC,sCAA9C;AAAuD,QAAA,IAAI,EAAC,SAA5D;AAAsE,QAAA,MAAM,EAAC;AAA7E;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,QAAZ;AAAsB,QAAA,IAAI,EAAC,UAA3B;AAAsC,QAAA,OAAO,EAAC,0BAA9C;AAAqD,QAAA,MAAM,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,QAAZ;AAAsB,QAAA,IAAI,EAAC,UAA3B;AAAsC,QAAA,OAAO,EAAC,0BAA9C;AAAqD,QAAA,MAAM,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAM,QAAA,KAAK,EAAE;AAACyC,UAAAA,WAAW,EAAE;AAAd,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEC,UAAAA,OAAO,EAAC;AAAV,SAAT;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,OAAO,EAAC,UAArB;AAAgC,UAAA,IAAI,EAAC,OAArC;AAAA,iCACI,QAAC,MAAD;AACA,YAAA,OAAO,EAAC,2BADR;AAEA,YAAA,EAAE,EAAC,qBAFH;AAGA,YAAA,KAAK,EAAEvC,GAHP;AAIA,YAAA,KAAK,EAAC,cAJN;AAKA,YAAA,QAAQ,EAAE0B,gBALV;AAMA,YAAA,YAAY,EAAE,CANd;AAAA,sBAQK1C,YAAY,CAACoC,GAAb,CAAiB,CAACoB,KAAD,EAAQC,KAAR,KAAkB;AAChC,kCAAO,QAAC,QAAD;AAAsB,gBAAA,KAAK,EAAED,KAA7B;AAAA,2BAAqCA,KAArC;AAAA,iBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,aAFA;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAkBI;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAE,QAAb;AAAuBJ,UAAAA,WAAW,EAAE;AAApC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ,eAmBI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEC,UAAAA,OAAO,EAAC;AAAV,SAAT;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,OAAO,EAAC,UAArB;AAAA,iCACI,QAAC,MAAD;AACA,YAAA,OAAO,EAAC,mBADR;AAEA,YAAA,EAAE,EAAC,aAFH;AAGA,YAAA,KAAK,EAAEzC,MAHP;AAIA,YAAA,KAAK,EAAC,QAJN;AAKA,YAAA,QAAQ,EAAE8B,gBALV;AAMA,YAAA,YAAY,EAAE,CANd;AAAA,sBAQK7C,IAAI,CAACqC,GAAL,CAAS,CAACoB,KAAD,EAAQC,KAAR,KAAkB;AACxB,kCAAO,QAAC,QAAD;AAAsB,gBAAA,KAAK,EAAED,KAA7B;AAAA,2BAAqCA,KAArC;AAAA,iBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,aAFA;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAnBJ,eAmCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCJ,eAoCI;AAAA,mEAAY;AAAA,qBAAItB,IAAI,CAACrB,MAAM,GAAC,CAAR,CAAJ,CAAe6C,IAAnB,EAAyB9C,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cApCJ,oBAoCkE;AAAA;AAAA;AAAA;AAAA,cApClE,eAqCI;AAAA,+DAAa;AAAA,qBAAIsB,IAAI,CAACrB,MAAM,GAAC,CAAR,CAAJ,CAAe8C,IAAnB,EAAyB/C,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cArCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2GH;;GAvPQnB,K;;KAAAA,K;AAyPT,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { ComposedChart, XAxis, YAxis, Tooltip, Legend, CartesianGrid, Area, Line } from 'recharts';\nimport Box from '@mui/material/Box';\nimport Slider from '@mui/material/Slider';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nfunction Graph({ P, Min, Max, Rev }) {\n    //단리, 복리 => 년 단위로 계산\n    //적립식 복리 : Compound + Contribute\n    const Year = [0, 5, 10, 15, 20, 25, 30, 35, 40];\n    const Contribution = [0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000]; //적립금액\n    const inflationRate = 2; //물가 상승률\n    function cov_Money(Money) {\n      \n        let scaledValue = Money;\n          \n        if(scaledValue < 10000) {\n          scaledValue = Math.round(scaledValue/10)*10;\n        }\n\n        while (scaledValue >= 10000) {\n            scaledValue /= 10000;\n        }\n        return parseInt(scaledValue);\n    }\n\n    function cov_Units(Money) {\n        const units = ['만원', '억원'];\n        let unitIndex = 0;\n\n        while (Money >= 10000 && unitIndex < units.length - 1) {\n            unitIndex += 1;\n            Money /= 10000;\n        }\n        return units[unitIndex];\n    }\n\n    const covMoney = cov_Money(P);\n    const covUnits = cov_Units(P);\n    const [Period, getPeriod] = useState(15);\n    const [PMT, getPMT] = useState(0);\n\n    //소수점 둘째 자리 반올림\n    function round_two(float) {\n        return Math.round(float * 1e2) / 1e2;\n    }\n    //단리 공식\n    function formula_Simple(r, t) {\n        return covMoney+(r/100*covMoney)*(t);\n    }\n    //복리 공식\n    function formula_Compound(r, t) {\n        return covMoney*((r/100+1)**t);\n    }\n    //적립식 복리 공식\n    function formula_Contribute(r, t) {\n        const pmt = covUnits === '억원' ? (PMT/10000) : PMT;\n        return pmt * (((1 + r/100) ** t) -1) / (r/100);\n    }\n    //현재가치 공식\n    function formula_PV(FV, t) {\n        return FV / ((1+inflationRate/100)**t);\n    }\n\n    //단리 계산기\n    function Cal_Simple(t) {\n        const MIN_VALUE = formula_Simple(Min, t);\n        const MAX_VALUE = formula_Simple(Max, t);\n        const REV_VALUE = formula_Simple(Rev, t);\n        const obj = {\n            \"year\": t+'년',\n            \"예상수익범위\": [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n            \"예상수익\": round_two(REV_VALUE), \n            \"현재가치\": round_two(formula_PV(REV_VALUE, t))\n        };\n        return obj;\n    }\n\n    //복리 계산기\n    //*년복리\n    function Cal_Compound(t) {\n        const MIN_VALUE = formula_Compound(Min, t);\n        const MAX_VALUE = formula_Compound(Max, t);\n        const REV_VALUE = formula_Compound(Rev, t);\n        const obj = {\n            \"year\": t+'년',\n            \"예상수익범위\": [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n            \"예상수익\": round_two(REV_VALUE), \n            \"현재가치\": round_two(formula_PV(REV_VALUE, t))\n        };\n        return obj;\n    }\n\n    //적립식 복리 계산기\n    //*년복리\n    function Cal_Compound_Contribution(t) {\n        const MIN_VALUE = formula_Compound(Min, t) + formula_Contribute(Min, t);\n        const MAX_VALUE = formula_Compound(Max, t) + formula_Contribute(Max, t);\n        const REV_VALUE = formula_Compound(Rev, t) + formula_Contribute(Rev, t);\n        const obj = {\n            \"year\": t+'년',\n            \"예상수익범위\": [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n            \"예상수익\": round_two(REV_VALUE), \n            \"현재가치\": round_two(formula_PV(REV_VALUE, t))\n        };\n        return obj;\n    }\n\n    //데이터 세팅\n    const data = Year.map(function(t){\n        return Cal_Compound_Contribution(t);\n    });\n\n    //기간 세팅\n    function valueText(value) {\n        return `${value}년 뒤`\n    }\n\n    //Slider handleChange\n    const SLI_handleChange = (event, newValue) => {\n        if (typeof newValue === 'number') {\n          getPeriod(newValue);\n        }\n    };\n\n    //Contribution handleChange\n    const CON_handleChange = (event) => {\n        getPMT(event.target.value);\n    };\n\n    //Period handleChange\n    const PER_handleChange = (event) => {\n        getPeriod(event.target.value);\n    };\n\n    //Dialog part\n    const [open, setOpen] = React.useState(false);\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = (event, reason) => {\n        if (reason !== 'backdropClick') {\n            setOpen(false);\n          }\n    };\n\n    return (\n        <div>\n            <ComposedChart width={400} height={250} margin={{top: 20, bottom: 20}} data={data}>\n                <XAxis dataKey=\"year\" tick={{fontSize: 10}} padding={{right: 20}}/>\n                <YAxis unit={covUnits} tick={{fontSize: 10}} padding={{bottom: 10}} />\n                <Tooltip />\n                <Legend tick={{fontSize: 10}} />\n                <CartesianGrid stroke=\"#f4f4f4\" />\n                <Area unit={covUnits} type=\"monotone\" dataKey=\"예상수익범위\" fill=\"#FFB950\" stroke=\"#FFB950\"/>\n                <Line unit={covUnits} type=\"monotone\" dataKey=\"예상수익\" stroke=\"#1D1A82\" />\n                <Line unit={covUnits} type=\"monotone\" dataKey=\"현재가치\" stroke=\"#B45CCA\" />\n            </ComposedChart>\n            <div className='Discription'>\n                <span style={{marginRight: '0.3rem'}}>매년 </span>\n                <Box sx={{ display:'flex' }}>\n                    <FormControl variant='standard' size='small'>\n                        <Select\n                        labelId=\"contribution-select-label\"\n                        id=\"contribution-select\"\n                        value={PMT}\n                        label=\"만원\"\n                        onChange={CON_handleChange}\n                        defaultValue={0}\n                        >\n                            {Contribution.map((Value, index) => {\n                                return <MenuItem key={index} value={Value}>{Value}만원</MenuItem>\n                            })}\n                        </Select>\n                    </FormControl>\n                </Box>\n                <span style={{marginLeft: '0.3rem', marginRight: '0.3rem'}}> 을 적립했을 때 </span>\n                <Box sx={{ display:'flex' }}>\n                    <FormControl variant='standard'>\n                        <Select\n                        labelId=\"year-select-label\"\n                        id=\"year-select\"\n                        value={Period}\n                        label=\"년\"\n                        onChange={PER_handleChange}\n                        defaultValue={0}\n                        >\n                            {Year.map((Value, index) => {\n                                return <MenuItem key={index} value={Value}>{Value}년</MenuItem>\n                            })}\n                        </Select>\n                    </FormControl>\n                </Box>\n                <span> 뒤의 </span>\n                <span>예상수익은 <b>{data[Period/5].예상수익}{covUnits}</b>입니다.</span> <br/>\n                <span>(현재가치: <b>{data[Period/5].현재가치}{covUnits}</b> )</span>\n            </div>\n\n            {/* <div className='tableStyle'>\n                <ul className='Row'>\n                    <span className='ColumnValue'>예상 수익</span>\n                    <span className='ColumnValue'>현재 가치</span>\n                </ul>\n                <ul className='Row'>\n                    <span className='ColumnValue'>{data[Period/5].예상수익}{covUnits}</span>\n                    <span className='ColumnValue'>{data[Period/5].현재가치}{covUnits}</span>\n                </ul>\n                <div>{valueText(Period)}</div>\n            </div> */}\n            {/* <div style={{display: 'flex', justifyContent: 'center' }}>\n                <Button onClick={handleClickOpen}>Open Select Dialog</Button>\n                <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\n                    <DialogTitle>Fill the form</DialogTitle>\n                    <DialogContent>\n                        <Box sx={{ width: 300, display:'inline-block' }}>\n                            <Slider\n                                value={Period}\n                                aria-label='Year'\n                                getAriaValueText={valueText}\n                                valueLabelFormat={valueText}\n                                valueLabelDisplay='auto'\n                                onChange={SLI_handleChange}\n                                step={5}\n                                min={0}\n                                max={40}\n                                size=\"small\"\n                            />\n                        </Box>\n                        <Box sx={{ width: 300, display:'inline-block' }}>\n                            <FormControl fullWidth>\n                                <InputLabel id=\"contribution-select-label\">납입</InputLabel>\n                                <Select\n                                labelId=\"contribution-select-label\"\n                                id=\"contribution-select\"\n                                value={PMT}\n                                label=\"만원\"\n                                onChange={SEL_handleChange}\n                                defaultValue={0}\n                                >\n                                    {Contribution.map((Value, index) => {\n                                        return <MenuItem key={index} value={Value}>{Value}만원</MenuItem>\n                                    })}\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose}>Ok</Button>\n                    </DialogActions>\n                </Dialog>\n            </div> */}\n        </div>\n    );\n}\n\nexport default Graph;"]},"metadata":{},"sourceType":"module"}