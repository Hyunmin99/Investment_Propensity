{"ast":null,"code":"import _slicedToArray from\"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{ComposedChart,XAxis,YAxis,Tooltip,Legend,CartesianGrid,Area,Line}from'recharts';import Box from'@mui/material/Box';import MenuItem from'@mui/material/MenuItem';import FormControl from'@mui/material/FormControl';import Select from'@mui/material/Select';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Graph(_ref){var P=_ref.P,Min=_ref.Min,Max=_ref.Max,Rev=_ref.Rev;//단리, 복리 => 년 단위로 계산\n//적립식 복리 : Compound + Contribute\nvar Year=[0,5,10,15,20,25,30,35,40];var Contribution=[0,100,200,300,400,500,600,700,800,900,1000];//적립금액\nvar inflationRate=2;//물가 상승률\nfunction cov_Money(Money){var scaledValue=Money;if(scaledValue<10000){scaledValue=Math.round(scaledValue/10)*10;}while(scaledValue>=10000){scaledValue/=10000;}return parseInt(scaledValue);}function cov_Units(Money){var units=['만원','억원'];var unitIndex=0;while(Money>=10000&&unitIndex<units.length-1){unitIndex+=1;Money/=10000;}return units[unitIndex];}var covMoney=cov_Money(P);var covUnits=cov_Units(P);var _useState=useState(15),_useState2=_slicedToArray(_useState,2),Period=_useState2[0],getPeriod=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),PMT=_useState4[0],getPMT=_useState4[1];//소수점 둘째 자리 반올림\nfunction round_two(float){return Math.round(float*1e2)/1e2;}//단리 공식\nfunction formula_Simple(r,t){return covMoney+r/100*covMoney*t;}//복리 공식\nfunction formula_Compound(r,t){return covMoney*Math.pow(r/100+1,t);}//적립식 복리 공식\nfunction formula_Contribute(r,t){var pmt=covUnits==='억원'?PMT/10000:PMT;return pmt*(Math.pow(1+r/100,t)-1)/(r/100);}//현재가치 공식\nfunction formula_PV(FV,t){return FV/Math.pow(1+inflationRate/100,t);}//단리 계산기\nfunction Cal_Simple(t){var MIN_VALUE=formula_Simple(Min,t);var MAX_VALUE=formula_Simple(Max,t);var REV_VALUE=formula_Simple(Rev,t);var obj={\"year\":t+'년',\"예상수익범위\":[round_two(MIN_VALUE),round_two(MAX_VALUE)],\"예상수익\":round_two(REV_VALUE),\"현재가치\":round_two(formula_PV(REV_VALUE,t))};return obj;}//복리 계산기\n//*년복리\nfunction Cal_Compound(t){var MIN_VALUE=formula_Compound(Min,t);var MAX_VALUE=formula_Compound(Max,t);var REV_VALUE=formula_Compound(Rev,t);var obj={\"year\":t+'년',\"예상수익범위\":[round_two(MIN_VALUE),round_two(MAX_VALUE)],\"예상수익\":round_two(REV_VALUE),\"현재가치\":round_two(formula_PV(REV_VALUE,t))};return obj;}//적립식 복리 계산기\n//*년복리\nfunction Cal_Compound_Contribution(t){var MIN_VALUE=formula_Compound(Min,t)+formula_Contribute(Min,t);var MAX_VALUE=formula_Compound(Max,t)+formula_Contribute(Max,t);var REV_VALUE=formula_Compound(Rev,t)+formula_Contribute(Rev,t);var obj={\"year\":t+'년',\"예상수익범위\":[round_two(MIN_VALUE),round_two(MAX_VALUE)],\"예상수익\":round_two(REV_VALUE),\"현재가치\":round_two(formula_PV(REV_VALUE,t))};return obj;}//데이터 세팅\nvar data=Year.map(function(t){return Cal_Compound_Contribution(t);});//기간 세팅\nfunction valueText(value){return\"\".concat(value,\"\\uB144 \\uB4A4\");}//Contribution handleChange\nvar CON_handleChange=function CON_handleChange(event){getPMT(event.target.value);};//Period handleChange\nvar PER_handleChange=function PER_handleChange(event){getPeriod(event.target.value);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(ComposedChart,{width:400,height:250,margin:{top:20,bottom:20},data:data,children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"year\",tick:{fontSize:10},padding:{right:20}}),/*#__PURE__*/_jsx(YAxis,{unit:covUnits,tick:{fontSize:10},padding:{bottom:10}}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{tick:{fontSize:10}}),/*#__PURE__*/_jsx(CartesianGrid,{stroke:\"#f4f4f4\"}),/*#__PURE__*/_jsx(Area,{unit:covUnits,type:\"monotone\",dataKey:\"\\uC608\\uC0C1\\uC218\\uC775\\uBC94\\uC704\",fill:\"#FFB950\",stroke:\"#FFB950\"}),/*#__PURE__*/_jsx(Line,{unit:covUnits,type:\"monotone\",dataKey:\"\\uC608\\uC0C1\\uC218\\uC775\",stroke:\"#1D1A82\"}),/*#__PURE__*/_jsx(Line,{unit:covUnits,type:\"monotone\",dataKey:\"\\uD604\\uC7AC\\uAC00\\uCE58\",stroke:\"#B45CCA\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"Discription\",children:[/*#__PURE__*/_jsx(\"span\",{style:{marginRight:'0.3rem'},children:\"\\uB9E4\\uB144 \"}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex'},children:/*#__PURE__*/_jsx(FormControl,{variant:\"standard\",size:\"small\",children:/*#__PURE__*/_jsx(Select,{labelId:\"contribution-select-label\",id:\"contribution-select\",value:PMT,label:\"\\uB9CC\\uC6D0\",onChange:CON_handleChange,defaultValue:0,children:Contribution.map(function(Value,index){return/*#__PURE__*/_jsxs(MenuItem,{value:Value,children:[Value,\"\\uB9CC\\uC6D0\"]},index);})})})}),/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'0.3rem',marginRight:'0.3rem'},children:\" \\uC744 \\uC801\\uB9BD\\uD588\\uC744 \\uB54C \"}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex'},children:/*#__PURE__*/_jsx(FormControl,{variant:\"standard\",children:/*#__PURE__*/_jsx(Select,{labelId:\"year-select-label\",id:\"year-select\",value:Period,label:\"\\uB144\",onChange:PER_handleChange,defaultValue:0,children:Year.map(function(Value,index){return/*#__PURE__*/_jsxs(MenuItem,{value:Value,children:[Value,\"\\uB144\"]},index);})})})}),/*#__PURE__*/_jsx(\"span\",{children:\" \\uB4A4\\uC758 \"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uC608\\uC0C1 \\uC218\\uC775\\uC740 \",/*#__PURE__*/_jsxs(\"b\",{children:[data[Period/5].예상수익,covUnits]}),\"\\uC785\\uB2C8\\uB2E4.\",/*#__PURE__*/_jsx(\"br\",{}),\"(\\uD604\\uC7AC \\uAC00\\uCE58\\uB85C \\uD658\\uC0B0\\uC2DC \",/*#__PURE__*/_jsxs(\"b\",{children:[data[Period/5].현재가치,covUnits]}),\")\"]})]})]});}export default Graph;","map":{"version":3,"sources":["/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/Graph.js"],"names":["React","useState","ComposedChart","XAxis","YAxis","Tooltip","Legend","CartesianGrid","Area","Line","Box","MenuItem","FormControl","Select","Graph","P","Min","Max","Rev","Year","Contribution","inflationRate","cov_Money","Money","scaledValue","Math","round","parseInt","cov_Units","units","unitIndex","length","covMoney","covUnits","Period","getPeriod","PMT","getPMT","round_two","float","formula_Simple","r","t","formula_Compound","formula_Contribute","pmt","formula_PV","FV","Cal_Simple","MIN_VALUE","MAX_VALUE","REV_VALUE","obj","Cal_Compound","Cal_Compound_Contribution","data","map","valueText","value","CON_handleChange","event","target","PER_handleChange","top","bottom","fontSize","right","marginRight","display","Value","index","marginLeft","예상수익","현재가치"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { ComposedChart, XAxis, YAxis, Tooltip, Legend, CartesianGrid, Area, Line } from 'recharts';\nimport Box from '@mui/material/Box';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nfunction Graph({ P, Min, Max, Rev }) {\n    //단리, 복리 => 년 단위로 계산\n    //적립식 복리 : Compound + Contribute\n    const Year = [0, 5, 10, 15, 20, 25, 30, 35, 40];\n    const Contribution = [0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000]; //적립금액\n    const inflationRate = 2; //물가 상승률\n    function cov_Money(Money) {\n      \n        let scaledValue = Money;\n          \n        if(scaledValue < 10000) {\n          scaledValue = Math.round(scaledValue/10)*10;\n        }\n\n        while (scaledValue >= 10000) {\n            scaledValue /= 10000;\n        }\n        return parseInt(scaledValue);\n    }\n\n    function cov_Units(Money) {\n        const units = ['만원', '억원'];\n        let unitIndex = 0;\n\n        while (Money >= 10000 && unitIndex < units.length - 1) {\n            unitIndex += 1;\n            Money /= 10000;\n        }\n        return units[unitIndex];\n    }\n\n    const covMoney = cov_Money(P);\n    const covUnits = cov_Units(P);\n    const [Period, getPeriod] = useState(15);\n    const [PMT, getPMT] = useState(0);\n\n    //소수점 둘째 자리 반올림\n    function round_two(float) {\n        return Math.round(float * 1e2) / 1e2;\n    }\n    //단리 공식\n    function formula_Simple(r, t) {\n        return covMoney+(r/100*covMoney)*(t);\n    }\n    //복리 공식\n    function formula_Compound(r, t) {\n        return covMoney*((r/100+1)**t);\n    }\n    //적립식 복리 공식\n    function formula_Contribute(r, t) {\n        const pmt = covUnits === '억원' ? (PMT/10000) : PMT;\n        return pmt * (((1 + r/100) ** t) -1) / (r/100);\n    }\n    //현재가치 공식\n    function formula_PV(FV, t) {\n        return FV / ((1+inflationRate/100)**t);\n    }\n\n    //단리 계산기\n    function Cal_Simple(t) {\n        const MIN_VALUE = formula_Simple(Min, t);\n        const MAX_VALUE = formula_Simple(Max, t);\n        const REV_VALUE = formula_Simple(Rev, t);\n        const obj = {\n            \"year\": t+'년',\n            \"예상수익범위\": [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n            \"예상수익\": round_two(REV_VALUE), \n            \"현재가치\": round_two(formula_PV(REV_VALUE, t))\n        };\n        return obj;\n    }\n\n    //복리 계산기\n    //*년복리\n    function Cal_Compound(t) {\n        const MIN_VALUE = formula_Compound(Min, t);\n        const MAX_VALUE = formula_Compound(Max, t);\n        const REV_VALUE = formula_Compound(Rev, t);\n        const obj = {\n            \"year\": t+'년',\n            \"예상수익범위\": [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n            \"예상수익\": round_two(REV_VALUE), \n            \"현재가치\": round_two(formula_PV(REV_VALUE, t))\n        };\n        return obj;\n    }\n\n    //적립식 복리 계산기\n    //*년복리\n    function Cal_Compound_Contribution(t) {\n        const MIN_VALUE = formula_Compound(Min, t) + formula_Contribute(Min, t);\n        const MAX_VALUE = formula_Compound(Max, t) + formula_Contribute(Max, t);\n        const REV_VALUE = formula_Compound(Rev, t) + formula_Contribute(Rev, t);\n        const obj = {\n            \"year\": t+'년',\n            \"예상수익범위\": [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n            \"예상수익\": round_two(REV_VALUE), \n            \"현재가치\": round_two(formula_PV(REV_VALUE, t))\n        };\n        return obj;\n    }\n\n    //데이터 세팅\n    const data = Year.map(function(t){\n        return Cal_Compound_Contribution(t);\n    });\n\n    //기간 세팅\n    function valueText(value) {\n        return `${value}년 뒤`\n    }\n\n    //Contribution handleChange\n    const CON_handleChange = (event) => {\n        getPMT(event.target.value);\n    };\n\n    //Period handleChange\n    const PER_handleChange = (event) => {\n        getPeriod(event.target.value);\n    };\n\n    return (\n        <div>\n            <ComposedChart width={400} height={250} margin={{top: 20, bottom: 20}} data={data}>\n                <XAxis dataKey=\"year\" tick={{fontSize: 10}} padding={{right: 20}}/>\n                <YAxis unit={covUnits} tick={{fontSize: 10}} padding={{bottom: 10}} />\n                <Tooltip />\n                <Legend tick={{fontSize: 10}} />\n                <CartesianGrid stroke=\"#f4f4f4\" />\n                <Area unit={covUnits} type=\"monotone\" dataKey=\"예상수익범위\" fill=\"#FFB950\" stroke=\"#FFB950\"/>\n                <Line unit={covUnits} type=\"monotone\" dataKey=\"예상수익\" stroke=\"#1D1A82\" />\n                <Line unit={covUnits} type=\"monotone\" dataKey=\"현재가치\" stroke=\"#B45CCA\" />\n            </ComposedChart>\n            <div className='Discription'>\n                <span style={{marginRight: '0.3rem'}}>매년 </span>\n                <Box sx={{ display:'flex' }}>\n                    <FormControl variant='standard' size='small'>\n                        <Select\n                        labelId=\"contribution-select-label\"\n                        id=\"contribution-select\"\n                        value={PMT}\n                        label=\"만원\"\n                        onChange={CON_handleChange}\n                        defaultValue={0}\n                        >\n                            {Contribution.map((Value, index) => {\n                                return <MenuItem key={index} value={Value}>{Value}만원</MenuItem>\n                            })}\n                        </Select>\n                    </FormControl>\n                </Box>\n                <span style={{marginLeft: '0.3rem', marginRight: '0.3rem'}}> 을 적립했을 때 </span>\n                <Box sx={{ display:'flex' }}>\n                    <FormControl variant='standard'>\n                        <Select\n                        labelId=\"year-select-label\"\n                        id=\"year-select\"\n                        value={Period}\n                        label=\"년\"\n                        onChange={PER_handleChange}\n                        defaultValue={0}\n                        >\n                            {Year.map((Value, index) => {\n                                return <MenuItem key={index} value={Value}>{Value}년</MenuItem>\n                            })}\n                        </Select>\n                    </FormControl>\n                </Box>\n                <span> 뒤의 </span>\n                <span>예상 수익은 <b>{data[Period/5].예상수익}{covUnits}</b>입니다.<br/>\n                (현재 가치로 환산시 <b>{data[Period/5].현재가치}{covUnits}</b>)</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Graph;"]},"metadata":{},"sourceType":"module"}