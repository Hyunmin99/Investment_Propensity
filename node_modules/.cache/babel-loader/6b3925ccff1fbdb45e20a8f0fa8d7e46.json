{"ast":null,"code":"var _jsxFileName = \"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Test.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport NextButton from '../component/NextButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Test(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [Literacy, getLiteracy] = useState(0);\n\n  function MulSelection(_ref) {\n    _s();\n\n    let {\n      Answer\n    } = _ref;\n    const value = Answer.Value;\n    const answer = Answer.Answer;\n    const [isPressed, setIsPressed] = useState(false);\n\n    const onClick = () => {\n      Answer.State = !Answer.State; // const state = Answer.State;\n\n      Answer.State === false ? getLiteracy(Literacy - value) : getLiteracy(Literacy + value); // setIsPressed(!isPressed);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: 'ell-comp',\n        value: value,\n        onClick: onClick,\n        style: {\n          backgroundColor: Answer.State ? '#a6cee3' : '#eee'\n        },\n        children: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s(MulSelection, \"xbZH3DzXyTYDyv25dIidXDvNjLA=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: QnA_5.page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: QnA_5.Question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'ell-body',\n      children: QnA_5.Answers.map(answer => /*#__PURE__*/_jsxDEV(MulSelection, {\n        Answer: answer\n      }, answer.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Answer: \", Literacy]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Test, \"hgQNe0m0vLAi6SfbGktnwyv7tfw=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Test.js"],"names":["React","useState","Link","NextButton","Test","props","Literacy","getLiteracy","MulSelection","Answer","value","Value","answer","isPressed","setIsPressed","onClick","State","backgroundColor","QnA_5","page","Question","Answers","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CAAD,CAAxC;;AAEA,WAASO,YAAT,OAAkC;AAAA;;AAAA,QAAZ;AAAEC,MAAAA;AAAF,KAAY;AAC9B,UAAMC,KAAK,GAAGD,MAAM,CAACE,KAArB;AACA,UAAMC,MAAM,GAAGH,MAAM,CAACA,MAAtB;AACA,UAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;;AAEA,UAAMc,OAAO,GAAG,MAAM;AAClBN,MAAAA,MAAM,CAACO,KAAP,GAAe,CAACP,MAAM,CAACO,KAAvB,CADkB,CAElB;;AACAP,MAAAA,MAAM,CAACO,KAAP,KAAiB,KAAjB,GAAyBT,WAAW,CAAED,QAAQ,GAAGI,KAAb,CAApC,GAAyDH,WAAW,CAAED,QAAQ,GAAGI,KAAb,CAApE,CAHkB,CAIlB;AACH,KALD;;AAOA,wBACI;AAAA,6BACI;AAAI,QAAA,SAAS,EAAE,UAAf;AAA2B,QAAA,KAAK,EAAEA,KAAlC;AAAyC,QAAA,OAAO,EAAEK,OAAlD;AAA2D,QAAA,KAAK,EAAE;AAACE,UAAAA,eAAe,EAAER,MAAM,CAACO,KAAP,GAAe,SAAf,GAAyB;AAA3C,SAAlE;AAAA,kBAAuHJ;AAAvH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AApBgB,KAGRJ,YAHQ;;AAsBjB,sBACI;AAAA,4BAEI;AAAA,gBAAMU,KAAK,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAMD,KAAK,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAK,MAAA,SAAS,EAAE,UAAhB;AAAA,gBACKF,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAkBV,MAAM,iBACrB,QAAC,YAAD;AAA+B,QAAA,MAAM,EAAEA;AAAvC,SAAoBA,MAAM,CAACW,EAA3B;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ,eASI;AAAA,6BAAcjB,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;IAjDQF,I;;KAAAA,I;AAmDT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport NextButton from '../component/NextButton';\n\n\nfunction Test(props) {\n    const [Literacy, getLiteracy] = useState(0);\n\n    function MulSelection({ Answer }) {\n        const value = Answer.Value;\n        const answer = Answer.Answer;\n        const [isPressed, setIsPressed] = useState(false);\n\n        const onClick = () => {\n            Answer.State = !Answer.State;\n            // const state = Answer.State;\n            Answer.State === false ? getLiteracy( Literacy - value ):getLiteracy( Literacy + value ); \n            // setIsPressed(!isPressed);\n        };\n    \n        return (\n            <div>\n                <li className={'ell-comp'} value={value} onClick={onClick} style={{backgroundColor: Answer.State ? '#a6cee3':'#eee'}}>{answer}</li>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n\n            <h3>{ QnA_5.page }</h3> \n            <h1>{ QnA_5.Question }</h1>\n            <div className={'ell-body'}>\n                {QnA_5.Answers.map(answer => (\n                    <MulSelection key= {answer.id} Answer={answer} />\n                ))}\n            </div>\n            <h4>Answer: { Literacy }</h4>\n\n            {/* <Link to={{\n                pathname: \"/q6\",\n                state: {\n                    Period: {Period},\n                    Purpose: {Purpose},\n                    Tolerance: {Tolerance},\n                    Literacy: {Literacy},\n                    Experience: 0\n                }\n            }}>\n                <NextButton/>\n            </Link>    */}\n            \n        </div>\n    );\n}\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}