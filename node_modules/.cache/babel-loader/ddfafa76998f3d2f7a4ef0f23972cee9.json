{"ast":null,"code":"import _slicedToArray from\"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{ComposedChart,XAxis,YAxis,Tooltip,Legend,CartesianGrid,Area,Line}from\"recharts\";import Box from\"@mui/material/Box\";import MenuItem from\"@mui/material/MenuItem\";import FormControl from\"@mui/material/FormControl\";import Select from\"@mui/material/Select\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Graph(_ref){var P=_ref.P,Min=_ref.Min,Max=_ref.Max,Rev=_ref.Rev;//단리, 복리 => 년 단위로 계산\n//적립식 복리 : Compound + Contribute\nvar Year=[0,5,10,15,20,25,30,35,40];var Contribution=[0,100,200,300,400,500,600,700,800,900,1000];//적립금액\nvar inflationRate=2;//물가 상승률\nfunction cov_Money(Money){var scaledValue=Money;if(scaledValue<10000){scaledValue=Math.round(scaledValue/10)*10;}while(scaledValue>=10000){scaledValue/=10000;}return parseInt(scaledValue);}function cov_Units(Money){var units=[\"만원\",\"억원\"];var unitIndex=0;while(Money>=10000&&unitIndex<units.length-1){unitIndex+=1;Money/=10000;}return units[unitIndex];}var covMoney=cov_Money(P);var covUnits=cov_Units(P);var _useState=useState(15),_useState2=_slicedToArray(_useState,2),Period=_useState2[0],getPeriod=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),PMT=_useState4[0],getPMT=_useState4[1];//소수점 둘째 자리 반올림\nfunction round_two(float){return Math.round(float*1e2)/1e2;}//단리 공식\nfunction formula_Simple(r,t){return covMoney+r/100*covMoney*t;}//복리 공식\nfunction formula_Compound(r,t){return covMoney*Math.pow(r/100+1,t);}//적립식 복리 공식\nfunction formula_Contribute(r,t){var pmt=covUnits===\"억원\"?PMT/10000:PMT;if(r!==0){return pmt*(Math.pow(1+r/100,t)-1)/(r/100);}else{//이자율이 0인 경우, 계산식 분모에 0이 들어가면서 값이 무한대로 수렴 -> 예외처리\nreturn pmt*t;}}//현재가치 공식\nfunction formula_PV(FV,t){return FV/Math.pow(1+inflationRate/100,t);}//단리 계산기\nfunction Cal_Simple(t){var MIN_VALUE=formula_Simple(Min,t);var MAX_VALUE=formula_Simple(Max,t);var REV_VALUE=formula_Simple(Rev,t);var obj={year:t+\"년\",예상수익범위:[round_two(MIN_VALUE),round_two(MAX_VALUE)],예상수익:round_two(REV_VALUE),현재가치:round_two(formula_PV(REV_VALUE,t))};return obj;}//복리 계산기\n//*년복리\nfunction Cal_Compound(t){var MIN_VALUE=formula_Compound(Min,t);var MAX_VALUE=formula_Compound(Max,t);var REV_VALUE=formula_Compound(Rev,t);var obj={year:t+\"년\",예상수익범위:[round_two(MIN_VALUE),round_two(MAX_VALUE)],예상수익:round_two(REV_VALUE),현재가치:round_two(formula_PV(REV_VALUE,t))};return obj;}//적립식 복리 계산기\n//*년복리\nfunction Cal_Compound_Contribution(t){var MIN_VALUE=formula_Compound(Min,t)+formula_Contribute(Min,t);var MAX_VALUE=formula_Compound(Max,t)+formula_Contribute(Max,t);var REV_VALUE=formula_Compound(Rev,t)+formula_Contribute(Rev,t);var obj={year:t+\"년\",예상수익범위:[round_two(MIN_VALUE),round_two(MAX_VALUE)],예상수익:round_two(REV_VALUE),현재가치:round_two(formula_PV(REV_VALUE,t))};return obj;}//데이터 세팅\nvar data=Year.map(function(t){return Cal_Compound_Contribution(t);});console.log(data);//Contribution handleChange\nvar CON_handleChange=function CON_handleChange(event){getPMT(event.target.value);};//Period handleChange\nvar PER_handleChange=function PER_handleChange(event){getPeriod(event.target.value);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(ComposedChart,{width:400,height:250,margin:{top:20,bottom:20},data:data,children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"year\",tick:{fontSize:10},padding:{right:20}}),/*#__PURE__*/_jsx(YAxis,{unit:covUnits,tick:{fontSize:10},padding:{bottom:10}}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{tick:{fontSize:10}}),/*#__PURE__*/_jsx(CartesianGrid,{stroke:\"#f4f4f4\"}),/*#__PURE__*/_jsx(Area,{unit:covUnits,type:\"monotone\",dataKey:\"\\uC608\\uC0C1\\uC218\\uC775\\uBC94\\uC704\",fill:\"#FFB950\",stroke:\"#FFB950\"}),/*#__PURE__*/_jsx(Line,{unit:covUnits,type:\"monotone\",dataKey:\"\\uC608\\uC0C1\\uC218\\uC775\",stroke:\"#1D1A82\"}),/*#__PURE__*/_jsx(Line,{unit:covUnits,type:\"monotone\",dataKey:\"\\uD604\\uC7AC\\uAC00\\uCE58\",stroke:\"#B45CCA\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"Discription\",children:[/*#__PURE__*/_jsx(\"span\",{style:{marginRight:\"0.3rem\"},children:\"\\uB9E4\\uB144 \"}),/*#__PURE__*/_jsx(Box,{sx:{display:\"flex\"},children:/*#__PURE__*/_jsx(FormControl,{variant:\"standard\",size:\"small\",children:/*#__PURE__*/_jsx(Select,{labelId:\"contribution-select-label\",id:\"contribution-select\",value:PMT,label:\"\\uB9CC\\uC6D0\",onChange:CON_handleChange,defaultValue:0,children:Contribution.map(function(Value,index){return/*#__PURE__*/_jsxs(MenuItem,{value:Value,children:[Value,\"\\uB9CC\\uC6D0\"]},index);})})})}),/*#__PURE__*/_jsxs(\"span\",{style:{marginLeft:\"0.3rem\",marginRight:\"0.3rem\"},children:[\" \",\"\\uC744 \\uC801\\uB9BD\\uD588\\uC744 \\uB54C\",\" \"]}),/*#__PURE__*/_jsx(Box,{sx:{display:\"flex\"},children:/*#__PURE__*/_jsx(FormControl,{variant:\"standard\",children:/*#__PURE__*/_jsx(Select,{labelId:\"year-select-label\",id:\"year-select\",value:Period,label:\"\\uB144\",onChange:PER_handleChange,defaultValue:0,children:Year.map(function(Value,index){return/*#__PURE__*/_jsxs(MenuItem,{value:Value,children:[Value,\"\\uB144\"]},index);})})})}),/*#__PURE__*/_jsx(\"span\",{children:\" \\uB4A4\\uC758 \"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uC608\\uC0C1 \\uC218\\uC775\\uC740\",\" \",/*#__PURE__*/_jsxs(\"b\",{children:[data[Period/5].예상수익,covUnits]}),\"\\uC785\\uB2C8\\uB2E4.\",/*#__PURE__*/_jsx(\"br\",{}),\"(\\uD604\\uC7AC \\uAC00\\uCE58\\uB85C \\uD658\\uC0B0\\uC2DC\",\" \",/*#__PURE__*/_jsxs(\"b\",{children:[data[Period/5].현재가치,covUnits]}),\")\"]})]})]});}export default Graph;","map":{"version":3,"sources":["/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/Graph.js"],"names":["React","useState","ComposedChart","XAxis","YAxis","Tooltip","Legend","CartesianGrid","Area","Line","Box","MenuItem","FormControl","Select","Graph","P","Min","Max","Rev","Year","Contribution","inflationRate","cov_Money","Money","scaledValue","Math","round","parseInt","cov_Units","units","unitIndex","length","covMoney","covUnits","Period","getPeriod","PMT","getPMT","round_two","float","formula_Simple","r","t","formula_Compound","formula_Contribute","pmt","formula_PV","FV","Cal_Simple","MIN_VALUE","MAX_VALUE","REV_VALUE","obj","year","예상수익범위","예상수익","현재가치","Cal_Compound","Cal_Compound_Contribution","data","map","console","log","CON_handleChange","event","target","value","PER_handleChange","top","bottom","fontSize","right","marginRight","display","Value","index","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n    ComposedChart,\n    XAxis,\n    YAxis,\n    Tooltip,\n    Legend,\n    CartesianGrid,\n    Area,\n    Line,\n} from \"recharts\";\nimport Box from \"@mui/material/Box\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nfunction Graph({ P, Min, Max, Rev }) {\n    //단리, 복리 => 년 단위로 계산\n    //적립식 복리 : Compound + Contribute\n    const Year = [0, 5, 10, 15, 20, 25, 30, 35, 40];\n    const Contribution = [0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000]; //적립금액\n    const inflationRate = 2; //물가 상승률\n    function cov_Money(Money) {\n        let scaledValue = Money;\n\n        if (scaledValue < 10000) {\n            scaledValue = Math.round(scaledValue / 10) * 10;\n        }\n\n        while (scaledValue >= 10000) {\n            scaledValue /= 10000;\n        }\n        return parseInt(scaledValue);\n    }\n\n    function cov_Units(Money) {\n        const units = [\"만원\", \"억원\"];\n        let unitIndex = 0;\n\n        while (Money >= 10000 && unitIndex < units.length - 1) {\n            unitIndex += 1;\n            Money /= 10000;\n        }\n        return units[unitIndex];\n    }\n\n    const covMoney = cov_Money(P);\n    const covUnits = cov_Units(P);\n    const [Period, getPeriod] = useState(15);\n    const [PMT, getPMT] = useState(0);\n\n    //소수점 둘째 자리 반올림\n    function round_two(float) {\n        return Math.round(float * 1e2) / 1e2;\n    }\n    //단리 공식\n    function formula_Simple(r, t) {\n        return covMoney + (r / 100) * covMoney * t;\n    }\n    //복리 공식\n    function formula_Compound(r, t) {\n        return covMoney * (r / 100 + 1) ** t;\n    }\n    //적립식 복리 공식\n    function formula_Contribute(r, t) {\n        const pmt = covUnits === \"억원\" ? PMT / 10000 : PMT;\n        if(r !== 0){\n            return (pmt * ((1 + r / 100) ** t - 1)) / (r / 100);\n        }\n        else { //이자율이 0인 경우, 계산식 분모에 0이 들어가면서 값이 무한대로 수렴 -> 예외처리\n            return pmt * t;\n        }\n    }\n    //현재가치 공식\n    function formula_PV(FV, t) {\n        return FV / (1 + inflationRate / 100) ** t;\n    }\n\n    //단리 계산기\n    function Cal_Simple(t) {\n        const MIN_VALUE = formula_Simple(Min, t);\n        const MAX_VALUE = formula_Simple(Max, t);\n        const REV_VALUE = formula_Simple(Rev, t);\n        const obj = {\n            year: t + \"년\",\n            예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n            예상수익: round_two(REV_VALUE),\n            현재가치: round_two(formula_PV(REV_VALUE, t)),\n        };\n        return obj;\n    }\n\n    //복리 계산기\n    //*년복리\n    function Cal_Compound(t) {\n        const MIN_VALUE = formula_Compound(Min, t);\n        const MAX_VALUE = formula_Compound(Max, t);\n        const REV_VALUE = formula_Compound(Rev, t);\n        const obj = {\n            year: t + \"년\",\n            예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n            예상수익: round_two(REV_VALUE),\n            현재가치: round_two(formula_PV(REV_VALUE, t)),\n        };\n        return obj;\n    }\n\n    //적립식 복리 계산기\n    //*년복리\n    function Cal_Compound_Contribution(t) {\n        const MIN_VALUE = formula_Compound(Min, t) + formula_Contribute(Min, t);\n        const MAX_VALUE = formula_Compound(Max, t) + formula_Contribute(Max, t);\n        const REV_VALUE = formula_Compound(Rev, t) + formula_Contribute(Rev, t);\n        const obj = {\n            year: t + \"년\",\n            예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n            예상수익: round_two(REV_VALUE),\n            현재가치: round_two(formula_PV(REV_VALUE, t)),\n        };\n        return obj;\n    }\n\n    //데이터 세팅\n    const data = Year.map(function (t) {\n        return Cal_Compound_Contribution(t);\n    });\n\n    console.log(data);\n\n    //Contribution handleChange\n    const CON_handleChange = (event) => {\n        getPMT(event.target.value);\n    };\n\n    //Period handleChange\n    const PER_handleChange = (event) => {\n        getPeriod(event.target.value);\n    };\n\n    return (\n        <div>\n            <ComposedChart\n                width={400}\n                height={250}\n                margin={{ top: 20, bottom: 20 }}\n                data={data}\n            >\n                <XAxis\n                    dataKey=\"year\"\n                    tick={{ fontSize: 10 }}\n                    padding={{ right: 20 }}\n                />\n                <YAxis\n                    unit={covUnits}\n                    tick={{ fontSize: 10 }}\n                    padding={{ bottom: 10 }}\n                />\n                <Tooltip />\n                <Legend tick={{ fontSize: 10 }} />\n                <CartesianGrid stroke=\"#f4f4f4\" />\n                <Area\n                    unit={covUnits}\n                    type=\"monotone\"\n                    dataKey=\"예상수익범위\"\n                    fill=\"#FFB950\"\n                    stroke=\"#FFB950\"\n                />\n                <Line\n                    unit={covUnits}\n                    type=\"monotone\"\n                    dataKey=\"예상수익\"\n                    stroke=\"#1D1A82\"\n                />\n                <Line\n                    unit={covUnits}\n                    type=\"monotone\"\n                    dataKey=\"현재가치\"\n                    stroke=\"#B45CCA\"\n                />\n            </ComposedChart>\n            <div className=\"Discription\">\n                <span style={{ marginRight: \"0.3rem\" }}>매년 </span>\n                <Box sx={{ display: \"flex\" }}>\n                    <FormControl variant=\"standard\" size=\"small\">\n                        <Select\n                            labelId=\"contribution-select-label\"\n                            id=\"contribution-select\"\n                            value={PMT}\n                            label=\"만원\"\n                            onChange={CON_handleChange}\n                            defaultValue={0}\n                        >\n                            {Contribution.map((Value, index) => {\n                                return (\n                                    <MenuItem key={index} value={Value}>\n                                        {Value}만원\n                                    </MenuItem>\n                                );\n                            })}\n                        </Select>\n                    </FormControl>\n                </Box>\n                <span style={{ marginLeft: \"0.3rem\", marginRight: \"0.3rem\" }}>\n                    {\" \"}\n                    을 적립했을 때{\" \"}\n                </span>\n                <Box sx={{ display: \"flex\" }}>\n                    <FormControl variant=\"standard\">\n                        <Select\n                            labelId=\"year-select-label\"\n                            id=\"year-select\"\n                            value={Period}\n                            label=\"년\"\n                            onChange={PER_handleChange}\n                            defaultValue={0}\n                        >\n                            {Year.map((Value, index) => {\n                                return (\n                                    <MenuItem key={index} value={Value}>\n                                        {Value}년\n                                    </MenuItem>\n                                );\n                            })}\n                        </Select>\n                    </FormControl>\n                </Box>\n                <span> 뒤의 </span>\n                <span>\n                    예상 수익은{\" \"}\n                    <b>\n                        {data[Period / 5].예상수익}\n                        {covUnits}\n                    </b>\n                    입니다.\n                    <br />\n                    (현재 가치로 환산시{\" \"}\n                    <b>\n                        {data[Period / 5].현재가치}\n                        {covUnits}\n                    </b>\n                    )\n                </span>\n            </div>\n        </div>\n    );\n}\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}