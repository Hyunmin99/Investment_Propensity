{"ast":null,"code":"var _jsxFileName = \"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q4.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Header from '../component/Header';\nimport NextButton from '../component/NextButton';\nimport QNA from '../content/QNA';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QnA = QNA[3];\n\nfunction Q4(props) {\n  _s();\n\n  // const Period = props.location.state.Period;\n  // const Purpose = props.location.state.Purpose;\n  // const Tol = props.location.state.Tolerance;\n  const Res = props.location.state.Res; // console.log(Res);\n\n  const [Response, getResponse] = useState('Not Selected');\n\n  function SelButton(_ref) {\n    let {\n      Answer\n    } = _ref;\n    const id = Answer.id;\n    const answer = Answer.Answer;\n    const explain = Answer.Explain;\n\n    const onClick = () => {\n      QnA.Answers.map(answer => answer.State = false);\n      Answer.State = !Answer.State;\n      getResponse(id);\n      console.log(answer);\n      QnA.status = true;\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'sel-button',\n        onClick: onClick,\n        style: {\n          backgroundColor: Answer.State ? '#1d1a82' : '#F7F7F7',\n          color: Answer.State && 'White'\n        },\n        children: [answer, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'small-text',\n          style: {\n            marginTop: '0.5rem',\n            color: Answer.State && '#F2F2F2'\n          },\n          children: explain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n  Res[QnA.page] = Response;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"page\",\n        children: QnA.page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"question\",\n        children: QnA.Question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), QnA.Answers.map(answer => /*#__PURE__*/_jsxDEV(SelButton, {\n        Answer: answer\n      }, answer.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)), QnA.status ? /*#__PURE__*/_jsxDEV(NextButton, {\n        Path: \"/q5\",\n        Res: Res,\n        Text: 'Next'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        className: \"next\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 85\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Q4, \"5HFk+YsOECL948UM+/PxNXRrM2U=\");\n\n_c = Q4;\nexport default Q4;\n\nvar _c;\n\n$RefreshReg$(_c, \"Q4\");","map":{"version":3,"sources":["/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q4.js"],"names":["React","useState","Header","NextButton","QNA","QnA","Q4","props","Res","location","state","Response","getResponse","SelButton","Answer","id","answer","explain","Explain","onClick","Answers","map","State","console","log","status","backgroundColor","color","marginTop","page","Question"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Header from '../component/Header';\nimport NextButton from '../component/NextButton';\nimport QNA from '../content/QNA'\n\nconst QnA = QNA[3];\n\nfunction Q4(props) {\n    // const Period = props.location.state.Period;\n    // const Purpose = props.location.state.Purpose;\n    // const Tol = props.location.state.Tolerance;\n    const Res = props.location.state.Res;\n\n    // console.log(Res);\n\n    const [Response, getResponse] = useState('Not Selected');\n    function SelButton({ Answer }) {\n\n        const id = Answer.id;\n        const answer = Answer.Answer;\n        const explain = Answer.Explain;\n\n        const onClick = () => {\n            QnA.Answers.map(answer => (\n                answer.State = false\n            ));\n            Answer.State = !Answer.State;\n            getResponse(id);\n            console.log(answer);\n            QnA.status = true;\n        }\n        return (\n            <div>\n                <button \n                    className={'sel-button'} \n                    onClick={ onClick } \n                    style={{backgroundColor: Answer.State ? '#1d1a82':'#F7F7F7', color: Answer.State && 'White'}}>\n                    {answer}\n                    <div className={'small-text'} style={{marginTop: '0.5rem', color: Answer.State && '#F2F2F2'}}>\n                        {explain}\n                    </div>\n                </button>\n            </div>\n        );\n    }\n\n    Res[QnA.page] = Response;\n    \n    return (\n        <div className=\"App\">\n            <Header />\n            <div className='Content'>\n                <h3 className='page'>{ QnA.page }</h3> \n                <h1 className='question'>{ QnA.Question }</h1>\n                {QnA.Answers.map(answer => (\n                    <SelButton key= {answer.id} Answer= {answer}/>\n                ))}\n                {QnA.status ?  <NextButton Path={\"/q5\"} Res={Res} Text={'Next'}/> : <button disabled className='next'>Next</button> }\n            </div>\n        </div>\n    );\n}\n\nexport default Q4;"]},"metadata":{},"sourceType":"module"}