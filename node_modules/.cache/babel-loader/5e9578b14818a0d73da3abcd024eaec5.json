{"ast":null,"code":"var _jsxFileName = \"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/MultiSel.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MultiSel(_ref) {\n  var _s = $RefreshSig$();\n\n  let {\n    QnA,\n    getResponse\n  } = _ref;\n\n  function MulSelection(_ref2) {\n    _s();\n\n    let {\n      Answer\n    } = _ref2;\n    const id = Answer.id;\n    const [a, setA] = useState(false); // 렌더링을 위해.. 임의로 넣음\n\n    const ResponseList = [];\n\n    const onClick = () => {\n      Answer.State = !Answer.State;\n      QnA.status = true;\n      Answer.State === false ? setA(-id) : setA(id);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"ell-comp\",\n        onClick: onClick,\n        style: {\n          backgroundColor: Answer.State ? \"#1d1a82\" : \"#F7F7F7\",\n          color: Answer.State && \"White\"\n        },\n        children: Answer.Answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(MulSelection, \"drQxr6nNGWXUSsRxil5fVeONrKU=\");\n\n  QnA.Answers.map(answer => answer.State && ResponseList.push(answer.id));\n  getResponse(ResponseList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"page\",\n        children: QnA.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"question\",\n        children: [\" \", QnA.Question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), QnA.Answers.map(answer => /*#__PURE__*/_jsxDEV(MulSelection, {\n        Answer: answer\n      }, answer.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n\n_c = MultiSel;\nexport default MultiSel;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiSel\");","map":{"version":3,"sources":["/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/MultiSel.js"],"names":["React","MultiSel","QnA","getResponse","MulSelection","Answer","id","a","setA","useState","ResponseList","onClick","State","status","backgroundColor","color","Answers","map","answer","push","Question"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,QAAT,OAAsC;AAAA;;AAAA,MAApB;AAACC,IAAAA,GAAD;AAAMC,IAAAA;AAAN,GAAoB;;AAEpC,WAASC,YAAT,QAAkC;AAAA;;AAAA,QAAZ;AAAEC,MAAAA;AAAF,KAAY;AAChC,UAAMC,EAAE,GAAGD,MAAM,CAACC,EAAlB;AAEA,UAAM,CAACC,CAAD,EAAIC,IAAJ,IAAYC,QAAQ,CAAC,KAAD,CAA1B,CAHgC,CAGG;;AACnC,UAAMC,YAAY,GAAG,EAArB;;AAEA,UAAMC,OAAO,GAAG,MAAM;AACpBN,MAAAA,MAAM,CAACO,KAAP,GAAe,CAACP,MAAM,CAACO,KAAvB;AACAV,MAAAA,GAAG,CAACW,MAAJ,GAAa,IAAb;AACAR,MAAAA,MAAM,CAACO,KAAP,KAAiB,KAAjB,GAAyBJ,IAAI,CAAC,CAACF,EAAF,CAA7B,GAAqCE,IAAI,CAACF,EAAD,CAAzC;AACD,KAJD;;AAKA,wBACE;AAAA,6BACE;AACE,QAAA,SAAS,EAAE,UADb;AAEE,QAAA,OAAO,EAAEK,OAFX;AAGE,QAAA,KAAK,EAAE;AACLG,UAAAA,eAAe,EAAET,MAAM,CAACO,KAAP,GAAe,SAAf,GAA2B,SADvC;AAELG,UAAAA,KAAK,EAAEV,MAAM,CAACO,KAAP,IAAgB;AAFlB,SAHT;AAAA,kBAQGP,MAAM,CAACA;AARV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AA3BmC,KAE3BD,YAF2B;;AA6BlCF,EAAAA,GAAG,CAACc,OAAJ,CAAYC,GAAZ,CAAiBC,MAAD,IAAYA,MAAM,CAACN,KAAP,IAAgBF,YAAY,CAACS,IAAb,CAAkBD,MAAM,CAACZ,EAAzB,CAA5C;AACAH,EAAAA,WAAW,CAACO,YAAD,CAAX;AAEA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA,kBAAsBR,GAAG,CAACI;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,wBAA2BJ,GAAG,CAACkB,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGlB,GAAG,CAACc,OAAJ,CAAYC,GAAZ,CAAiBC,MAAD,iBACf,QAAC,YAAD;AAA8B,QAAA,MAAM,EAAEA;AAAtC,SAAmBA,MAAM,CAACZ,EAA1B;AAAA;AAAA;AAAA;AAAA,cADD,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWH;;KA3CQL,Q;AA6CT,eAAeA,QAAf","sourcesContent":["import React from 'react';\n\nfunction MultiSel({QnA, getResponse}) {\n\n  function MulSelection({ Answer }) {\n    const id = Answer.id;\n\n    const [a, setA] = useState(false); // 렌더링을 위해.. 임의로 넣음\n    const ResponseList = [];\n\n    const onClick = () => {\n      Answer.State = !Answer.State;\n      QnA.status = true;\n      Answer.State === false ? setA(-id) : setA(id);\n    };\n    return (\n      <div>\n        <li\n          className={\"ell-comp\"}\n          onClick={onClick}\n          style={{\n            backgroundColor: Answer.State ? \"#1d1a82\" : \"#F7F7F7\",\n            color: Answer.State && \"White\",\n          }}\n        >\n          {Answer.Answer}\n        </li>\n      </div>\n    );\n  }\n\n    QnA.Answers.map((answer) => answer.State && ResponseList.push(answer.id));\n    getResponse(ResponseList);\n\n    return (\n      <div>\n        <div className=\"Content\">\n          <h3 className=\"page\">{QnA.id}</h3>\n          <h1 className=\"question\"> {QnA.Question}</h1>\n          {QnA.Answers.map((answer) => (\n            <MulSelection key={answer.id} Answer={answer} />\n          ))}\n        </div>\n      </div>\n    );\n}\n\nexport default MultiSel;"]},"metadata":{},"sourceType":"module"}