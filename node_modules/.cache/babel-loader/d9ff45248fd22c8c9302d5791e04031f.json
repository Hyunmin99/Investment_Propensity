{"ast":null,"code":"var _jsxFileName = \"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/SliderSel.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Slider from \"@mui/material/Slider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SliderSel(_ref) {\n  _s();\n\n  let {\n    QnA,\n    getResponse\n  } = _ref;\n  const [Resp, getResp] = useState(10);\n  QnA.status = true;\n\n  function valueLabelFormat(Resp) {\n    const units = [\"만원\", \"억원\"];\n    let unitIndex = 0;\n    let scaledValue = Resp; // Res[QnA.page] = parseInt(scaledValue);\n\n    getResponse(parseInt(scaledValue));\n\n    if (scaledValue < 10000) {\n      scaledValue = Math.round(scaledValue / 10) * 10;\n    }\n\n    while (scaledValue >= 10000 && unitIndex < units.length - 1) {\n      unitIndex += 1;\n      scaledValue /= 10000;\n    }\n\n    return `${parseInt(scaledValue)} ${units[unitIndex]}`;\n  }\n\n  function calculateValue(Resp) {\n    return 10 * Math.pow(10, Resp / 25);\n  }\n\n  const handleChange = (event, newValue) => {\n    if (typeof newValue === \"number\") {\n      getResp(newValue);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"page\",\n      children: QnA.page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"question\",\n      children: [\" \", QnA.Question]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: 300,\n        display: \"inline-block\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        id: \"non-linear-slider\",\n        gutterBottom: true,\n        children: [\"\\uD22C\\uC790 \\uAE08\\uC561: \", valueLabelFormat(calculateValue(Resp))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        value: Resp,\n        min: 0,\n        step: 0.02,\n        max: 100,\n        scale: calculateValue,\n        getAriaValueText: valueLabelFormat,\n        valueLabelFormat: valueLabelFormat,\n        onChange: handleChange,\n        \"aria-labelledby\": \"non-linear-slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SliderSel, \"qYTxbhLoIgCF+CL9tYR15aBoXOQ=\");\n\n_c = SliderSel;\nexport default SliderSel;\n\nvar _c;\n\n$RefreshReg$(_c, \"SliderSel\");","map":{"version":3,"sources":["/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/SliderSel.js"],"names":["React","Box","Typography","Slider","SliderSel","QnA","getResponse","Resp","getResp","useState","status","valueLabelFormat","units","unitIndex","scaledValue","parseInt","Math","round","length","calculateValue","pow","handleChange","event","newValue","page","Question","width","display"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,SAASC,SAAT,OAAyC;AAAA;;AAAA,MAAtB;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAsB;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,EAAD,CAAhC;AACAJ,EAAAA,GAAG,CAACK,MAAJ,GAAa,IAAb;;AAEA,WAASC,gBAAT,CAA0BJ,IAA1B,EAAgC;AAC9B,UAAMK,KAAK,GAAG,CAAC,IAAD,EAAO,IAAP,CAAd;AAEA,QAAIC,SAAS,GAAG,CAAhB;AACA,QAAIC,WAAW,GAAGP,IAAlB,CAJ8B,CAM9B;;AACAD,IAAAA,WAAW,CAACS,QAAQ,CAACD,WAAD,CAAT,CAAX;;AAEA,QAAIA,WAAW,GAAG,KAAlB,EAAyB;AACvBA,MAAAA,WAAW,GAAGE,IAAI,CAACC,KAAL,CAAWH,WAAW,GAAG,EAAzB,IAA+B,EAA7C;AACD;;AAED,WAAOA,WAAW,IAAI,KAAf,IAAwBD,SAAS,GAAGD,KAAK,CAACM,MAAN,GAAe,CAA1D,EAA6D;AAC3DL,MAAAA,SAAS,IAAI,CAAb;AACAC,MAAAA,WAAW,IAAI,KAAf;AACD;;AACD,WAAQ,GAAEC,QAAQ,CAACD,WAAD,CAAc,IAAGF,KAAK,CAACC,SAAD,CAAY,EAApD;AACD;;AAED,WAASM,cAAT,CAAwBZ,IAAxB,EAA8B;AAC5B,WAAO,KAAKS,IAAI,CAACI,GAAL,CAAS,EAAT,EAAab,IAAI,GAAG,EAApB,CAAZ;AACD;;AAED,QAAMc,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC,QAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChCf,MAAAA,OAAO,CAACe,QAAD,CAAP;AACD;AACF,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,gBAAsBlB,GAAG,CAACmB;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,sBAA2BnB,GAAG,CAACoB,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEC,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,OAAO,EAAE;AAAvB,OAAT;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,mBAAf;AAAmC,QAAA,YAAY,MAA/C;AAAA,kDACUhB,gBAAgB,CAACQ,cAAc,CAACZ,IAAD,CAAf,CAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AACE,QAAA,KAAK,EAAEA,IADT;AAEE,QAAA,GAAG,EAAE,CAFP;AAGE,QAAA,IAAI,EAAE,IAHR;AAIE,QAAA,GAAG,EAAE,GAJP;AAKE,QAAA,KAAK,EAAEY,cALT;AAME,QAAA,gBAAgB,EAAER,gBANpB;AAOE,QAAA,gBAAgB,EAAEA,gBAPpB;AAQE,QAAA,QAAQ,EAAEU,YARZ;AASE,2BAAgB;AATlB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAxDQjB,S;;KAAAA,S;AA0DT,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Slider from \"@mui/material/Slider\";\n\nfunction SliderSel({ QnA, getResponse }) {\n  const [Resp, getResp] = useState(10);\n  QnA.status = true;\n\n  function valueLabelFormat(Resp) {\n    const units = [\"만원\", \"억원\"];\n\n    let unitIndex = 0;\n    let scaledValue = Resp;\n\n    // Res[QnA.page] = parseInt(scaledValue);\n    getResponse(parseInt(scaledValue));\n\n    if (scaledValue < 10000) {\n      scaledValue = Math.round(scaledValue / 10) * 10;\n    }\n\n    while (scaledValue >= 10000 && unitIndex < units.length - 1) {\n      unitIndex += 1;\n      scaledValue /= 10000;\n    }\n    return `${parseInt(scaledValue)} ${units[unitIndex]}`;\n  }\n\n  function calculateValue(Resp) {\n    return 10 * Math.pow(10, Resp / 25);\n  }\n\n  const handleChange = (event, newValue) => {\n    if (typeof newValue === \"number\") {\n      getResp(newValue);\n    }\n  };\n\n  return (\n    <div>\n      <h3 className=\"page\">{QnA.page}</h3>\n      <h1 className=\"question\"> {QnA.Question}</h1>\n      <Box sx={{ width: 300, display: \"inline-block\" }}>\n        <Typography id=\"non-linear-slider\" gutterBottom>\n          투자 금액: {valueLabelFormat(calculateValue(Resp))}\n        </Typography>\n        <Slider\n          value={Resp}\n          min={0}\n          step={0.02}\n          max={100}\n          scale={calculateValue}\n          getAriaValueText={valueLabelFormat}\n          valueLabelFormat={valueLabelFormat}\n          onChange={handleChange}\n          aria-labelledby=\"non-linear-slider\"\n        />\n      </Box>\n    </div>\n  );\n}\n\nexport default SliderSel;\n"]},"metadata":{},"sourceType":"module"}