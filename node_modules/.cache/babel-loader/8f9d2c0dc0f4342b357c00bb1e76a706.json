{"ast":null,"code":"var _jsxFileName = \"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../App.css';\nimport Header from '../component/Header';\nimport NextButton from '../component/NextButton';\nimport QNA from '../content/QNA';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QnA = QNA[0];\n\nfunction Q1(props) {\n  _s();\n\n  const history = useHistory();\n  useEffect(() => {\n    let unlisten = history.listen(location => {\n      if (history.action === 'PUSH') {\n        return null;\n      } else if (history.action === 'POP') {\n        const unblock = history.block(\"처음 화면으로 돌아가시겠어요? 🥲\");\n        return () => {\n          unblock();\n        };\n      }\n    });\n  }, []);\n  const Res = props.location.state.Res;\n  const [Response, getResponse] = useState('Not Selected!');\n\n  function SelButton(_ref) {\n    let {\n      Answer\n    } = _ref;\n    const id = Answer.id;\n    const answer = Answer.Answer;\n\n    const onClick = () => {\n      QnA.Answers.map(answer => answer.State = false);\n      Answer.State = !Answer.State;\n      QnA.status = true;\n      console.log(answer);\n      getResponse(id);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'sel-button',\n        onClick: onClick,\n        style: {\n          backgroundColor: Answer.State ? '#1d1a82' : '#F7F7F7',\n          color: Answer.State && 'White'\n        },\n        children: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  Res[QnA.page] = Response;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      history: props.history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"page\",\n        children: QnA.page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"question\",\n        children: [\" \", QnA.Question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), QnA.Answers.map(answer => /*#__PURE__*/_jsxDEV(SelButton, {\n        Answer: answer\n      }, answer.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)), QnA.status ? /*#__PURE__*/_jsxDEV(NextButton, {\n        Path: \"/q2\",\n        Res: Res,\n        Text: 'Next'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        className: \"next\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 76\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Q1, \"6AVrJ2cAYvkO49apfIpGLAhck2Y=\", false, function () {\n  return [useHistory];\n});\n\n_c = Q1;\nexport default Q1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Q1\");","map":{"version":3,"sources":["/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q1.js"],"names":["React","useState","useEffect","useHistory","Header","NextButton","QNA","QnA","Q1","props","history","unlisten","listen","location","action","unblock","block","Res","state","Response","getResponse","SelButton","Answer","id","answer","onClick","Answers","map","State","status","console","log","backgroundColor","color","page","Question"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../App.css';\nimport Header from '../component/Header';\nimport NextButton from '../component/NextButton';\nimport QNA from '../content/QNA'\n\nconst QnA = QNA[0];\n\nfunction Q1(props) {\n\n  const history = useHistory();\n\n  useEffect(() => {\n    let unlisten = history.listen((location) => {\n      if (history.action === 'PUSH') {\n        return null;\n      }\n      else if(history.action === 'POP'){\n        const unblock = history.block(\"처음 화면으로 돌아가시겠어요? 🥲\");\n        return () => {unblock();}\n      }\n    })\n  }, []);\n\n  const Res = props.location.state.Res;\n\n  const [Response, getResponse] = useState('Not Selected!');\n\n  function SelButton({ Answer }) {\n    const id = Answer.id;\n    const answer = Answer.Answer;\n\n    const onClick = () => {\n      QnA.Answers.map(answer => (\n          answer.State = false\n      ));\n      Answer.State = !Answer.State;\n      QnA.status = true;\n      console.log(answer);\n      getResponse(id);\n    }\n    return (\n      <div>\n        <button className={'sel-button'} onClick={ onClick } style={{backgroundColor: Answer.State ? '#1d1a82':'#F7F7F7', color: Answer.State && 'White'}}>{answer}</button>\n      </div>\n    );\n  }\n  \n  Res[QnA.page] = Response;\n  \n  return (\n    <div className=\"App\">\n      <Header history={props.history}/>\n      <div className='Content'>\n        <h3 className='page'>{ QnA.page }</h3> \n        <h1 className='question'> { QnA.Question }</h1>\n        {QnA.Answers.map(answer => (\n          <SelButton key= {answer.id} Answer={answer}/>\n        ))}\n        {QnA.status ? <NextButton Path={\"/q2\"} Res={Res} Text={'Next'}/> : <button disabled className='next'>Next</button> }\n      </div>\n    </div>\n  );\n}\n\nexport default Q1;\n"]},"metadata":{},"sourceType":"module"}