{"ast":null,"code":"var _jsxFileName = \"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q17.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../App.css';\nimport Header from '../component/Header';\nimport NextButton from '../component/NextButton';\nimport QNA from '../content/QNA';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QnA = QNA[16];\n\nfunction Q17(props) {\n  _s();\n\n  const Res = props.location.state.Res; // console.log(Res);\n\n  const [Resp, getResp] = useState(10); // const [Response, getResponse] = useState('Not Selected');\n\n  QnA.status = true;\n\n  function valueLabelFormat(Resp) {\n    const units = ['만원', '억원'];\n    let unitIndex = 0;\n    let scaledValue = Resp;\n    Res[QnA.page] = parseInt(scaledValue);\n\n    if (scaledValue < 10000) {\n      scaledValue = Math.round(scaledValue / 10) * 10;\n    }\n\n    while (scaledValue >= 10000 && unitIndex < units.length - 1) {\n      unitIndex += 1;\n      scaledValue /= 10000;\n    }\n\n    return `${parseInt(scaledValue)} ${units[unitIndex]}`;\n  }\n\n  function calculateValue(Resp) {\n    // return 2 ** Resp;\n    // return Resp;\n    // return Resp * 10;\n    // console.log(Math.log10(Resp));\n    // return 10*(10 ** (Math.log10(Resp)*(2)));\n    return 10 * Math.pow(10, Resp / 25);\n  }\n\n  const handleChange = (event, newValue) => {\n    if (typeof newValue === 'number') {\n      getResp(newValue);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"page\",\n        children: QnA.page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"question\",\n        children: [\" \", QnA.Question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: 300,\n          display: 'inline-block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"non-linear-slider\",\n          gutterBottom: true,\n          children: [\"\\uD22C\\uC790 \\uAE08\\uC561: \", valueLabelFormat(calculateValue(Resp))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          value: Resp,\n          min: 0,\n          step: 0.02,\n          max: 100,\n          scale: calculateValue,\n          getAriaValueText: valueLabelFormat,\n          valueLabelFormat: valueLabelFormat,\n          onChange: handleChange,\n          \"aria-labelledby\": \"non-linear-slider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        Path: \"/q18\",\n        Res: Res,\n        Text: 'Next'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Q17, \"qYTxbhLoIgCF+CL9tYR15aBoXOQ=\");\n\n_c = Q17;\nexport default Q17;\n\nvar _c;\n\n$RefreshReg$(_c, \"Q17\");","map":{"version":3,"sources":["/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/pages/Q17.js"],"names":["React","useState","Header","NextButton","QNA","Box","Typography","Slider","QnA","Q17","props","Res","location","state","Resp","getResp","status","valueLabelFormat","units","unitIndex","scaledValue","page","parseInt","Math","round","length","calculateValue","pow","handleChange","event","newValue","Question","width","display"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport '../App.css';\nimport Header from '../component/Header';\nimport NextButton from '../component/NextButton';\nimport QNA from '../content/QNA'\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\n\nconst QnA = QNA[16];\n\nfunction Q17(props) {\n  const Res = props.location.state.Res;\n  // console.log(Res);\n\n  const [Resp, getResp] = useState(10);\n  // const [Response, getResponse] = useState('Not Selected');\n  QnA.status = true;\n  \n\n  function valueLabelFormat(Resp) {\n    const units = ['만원', '억원'];\n  \n    let unitIndex = 0;\n    let scaledValue = Resp;\n\n    Res[QnA.page] = parseInt(scaledValue);\n  \n    if(scaledValue < 10000) {\n      scaledValue = Math.round(scaledValue/10)*10;\n    }\n\n    while (scaledValue >= 10000 && unitIndex < units.length - 1) {\n      unitIndex += 1;\n      scaledValue /= 10000;\n    }\n    return `${parseInt(scaledValue)} ${units[unitIndex]}`;\n  }\n\n  function calculateValue(Resp) {\n    // return 2 ** Resp;\n    // return Resp;\n    // return Resp * 10;\n    // console.log(Math.log10(Resp));\n    // return 10*(10 ** (Math.log10(Resp)*(2)));\n    return 10 * Math.pow(10, (Resp)/25);\n  }\n\n  const handleChange = (event, newValue) => {\n    if (typeof newValue === 'number') {\n      getResp(newValue);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className='Content'>\n        <h3 className='page'>{ QnA.page }</h3> \n        <h1 className='question'> { QnA.Question }</h1>\n        {/* <div style={{width: '24rem', margin: '3rem', display:'inline-flex'}}> */}\n        <Box sx={{ width: 300, display: 'inline-block' }}>\n          <Typography id=\"non-linear-slider\" gutterBottom>\n            투자 금액: {valueLabelFormat(calculateValue(Resp))}\n          </Typography>\n          <Slider\n            value={Resp}\n            min={0}\n            step={0.02}\n            max={100}\n            scale={calculateValue}\n            getAriaValueText={valueLabelFormat}\n            valueLabelFormat={valueLabelFormat}\n            onChange={handleChange}\n            aria-labelledby=\"non-linear-slider\"\n          />\n        </Box>\n        <NextButton Path={\"/q18\"} Res={Res} Text={'Next'}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Q17;\n"]},"metadata":{},"sourceType":"module"}