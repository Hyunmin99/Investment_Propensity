{"ast":null,"code":"var _jsxFileName = \"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/ProfitGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ComposedChart, XAxis, YAxis, Tooltip, Legend, CartesianGrid, Area, Line } from \"recharts\";\nimport Box from \"@mui/material/Box\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfitGraph(_ref) {\n  _s();\n\n  let {\n    P,\n    Min,\n    Max,\n    Pro\n  } = _ref;\n  //단리, 복리 => 년 단위로 계산\n  //적립식 복리 : Compound + Contribute\n  const Year = [0, 5, 10, 15, 20, 25, 30, 35, 40];\n  const Contribution = [0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000]; //적립금액\n\n  const inflationRate = 2; //물가 상승률\n\n  function cov_Money(Money) {\n    let scaledValue = Money;\n\n    if (scaledValue < 10000) {\n      scaledValue = Math.round(scaledValue / 10) * 10;\n    }\n\n    while (scaledValue >= 10000) {\n      scaledValue /= 10000;\n    }\n\n    return parseInt(scaledValue);\n  }\n\n  function cov_Units(Money) {\n    const units = [\"만원\", \"억원\"];\n    let unitIndex = 0;\n\n    while (Money >= 10000 && unitIndex < units.length - 1) {\n      unitIndex += 1;\n      Money /= 10000;\n    }\n\n    return units[unitIndex];\n  }\n\n  const covMoney = cov_Money(P);\n  const covUnits = cov_Units(P);\n  const [Period, getPeriod] = useState(15);\n  const [PMT, getPMT] = useState(0); //소수점 둘째 자리 반올림\n\n  function round_two(float) {\n    return Math.round(float * 1e2) / 1e2;\n  } //단리 공식\n\n\n  function formula_Simple(r, t) {\n    return covMoney + r / 100 * covMoney * t;\n  } //복리 공식\n\n\n  function formula_Compound(r, t) {\n    return covMoney * (r / 100 + 1) ** t;\n  } //적립식 복리 공식\n\n\n  function formula_Contribute(r, t) {\n    const pmt = covUnits === \"억원\" ? PMT / 10000 : PMT;\n\n    if (r !== 0) {\n      return pmt * ((1 + r / 100) ** t - 1) / (r / 100);\n    } else {\n      //이자율이 0인 경우, 계산식 분모에 0이 들어가면서 값이 무한대로 수렴 -> 예외처리\n      return pmt * t;\n    }\n  } //현재가치 공식\n\n\n  function formula_PV(FV, t) {\n    return FV / (1 + inflationRate / 100) ** t;\n  } //단리 계산기\n\n\n  function Cal_Simple(t) {\n    const MIN_VALUE = formula_Simple(Min, t);\n    const MAX_VALUE = formula_Simple(Max, t);\n    const REV_VALUE = formula_Simple(Pro, t);\n    const obj = {\n      year: t + \"년\",\n      예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n      예상수익: round_two(REV_VALUE),\n      현재가치: round_two(formula_PV(REV_VALUE, t))\n    };\n    return obj;\n  } //복리 계산기\n  //*년복리\n\n\n  function Cal_Compound(t) {\n    const MIN_VALUE = formula_Compound(Min, t);\n    const MAX_VALUE = formula_Compound(Max, t);\n    const REV_VALUE = formula_Compound(Pro, t);\n    const obj = {\n      year: t + \"년\",\n      예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n      예상수익: round_two(REV_VALUE),\n      현재가치: round_two(formula_PV(REV_VALUE, t))\n    };\n    return obj;\n  } //적립식 복리 계산기\n  //*년복리\n\n\n  function Cal_Compound_Contribution(t) {\n    const MIN_VALUE = formula_Compound(Min, t) + formula_Contribute(Min, t);\n    const MAX_VALUE = formula_Compound(Max, t) + formula_Contribute(Max, t);\n    const REV_VALUE = formula_Compound(Pro, t) + formula_Contribute(Pro, t);\n    const obj = {\n      year: t + \"년\",\n      예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n      예상수익: round_two(REV_VALUE),\n      현재가치: round_two(formula_PV(REV_VALUE, t))\n    };\n    return obj;\n  } //데이터 세팅\n\n\n  const data = Year.map(function (t) {\n    return Cal_Compound_Contribution(t);\n  });\n  console.log(data); //Contribution handleChange\n\n  const CON_handleChange = event => {\n    getPMT(event.target.value);\n  }; //Period handleChange\n\n\n  const PER_handleChange = event => {\n    getPeriod(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          margin: \"0.3rem 0\"\n        },\n        children: \"\\uD83D\\uDCC8 \\uC608\\uC0C1 \\uC218\\uC775\\uB960 \\uADF8\\uB798\\uD504\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ComposedChart, {\n        width: 400,\n        height: 250,\n        margin: {\n          top: 20,\n          bottom: 20\n        },\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"year\",\n          tick: {\n            fontSize: 10\n          },\n          padding: {\n            right: 20\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          unit: covUnits,\n          tick: {\n            fontSize: 10\n          },\n          padding: {\n            bottom: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          tick: {\n            fontSize: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n          stroke: \"#f4f4f4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Area, {\n          unit: covUnits,\n          type: \"monotone\",\n          dataKey: \"\\uC608\\uC0C1\\uC218\\uC775\\uBC94\\uC704\",\n          fill: \"#FFB950\",\n          stroke: \"#FFB950\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          unit: covUnits,\n          type: \"monotone\",\n          dataKey: \"\\uC608\\uC0C1\\uC218\\uC775\",\n          stroke: \"#1D1A82\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          unit: covUnits,\n          type: \"monotone\",\n          dataKey: \"\\uD604\\uC7AC\\uAC00\\uCE58\",\n          stroke: \"#B45CCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Discription\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: \"0.3rem\"\n          },\n          children: \"\\uB9E4\\uB144 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\"\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"contribution-select-label\",\n              id: \"contribution-select\",\n              value: PMT,\n              label: \"\\uB9CC\\uC6D0\",\n              onChange: CON_handleChange,\n              defaultValue: 0,\n              children: Contribution.map((Value, index) => {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: Value,\n                  children: [Value, \"\\uB9CC\\uC6D0\"]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginLeft: \"0.3rem\",\n            marginRight: \"0.3rem\"\n          },\n          children: [\" \", \"\\uC744 \\uC801\\uB9BD\\uD588\\uC744 \\uB54C\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\"\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"year-select-label\",\n              id: \"year-select\",\n              value: Period,\n              label: \"\\uB144\",\n              onChange: PER_handleChange,\n              defaultValue: 0,\n              children: Year.map((Value, index) => {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: Value,\n                  children: [Value, \"\\uB144\"]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" \\uB4A4\\uC758 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uC608\\uC0C1 \\uC218\\uC775\\uC740\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [data[Period / 5].예상수익, covUnits]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), \"\\uC785\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), \"(\\uD604\\uC7AC \\uAC00\\uCE58\\uB85C \\uD658\\uC0B0\\uC2DC\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [data[Period / 5].현재가치, covUnits]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ProfitGraph, \"IAycEhEGN4rdiJ6F99XhcyepmaE=\");\n\n_c = ProfitGraph;\nexport default ProfitGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfitGraph\");","map":{"version":3,"sources":["/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/ProfitGraph.js"],"names":["React","useState","ComposedChart","XAxis","YAxis","Tooltip","Legend","CartesianGrid","Area","Line","Box","MenuItem","FormControl","Select","ProfitGraph","P","Min","Max","Pro","Year","Contribution","inflationRate","cov_Money","Money","scaledValue","Math","round","parseInt","cov_Units","units","unitIndex","length","covMoney","covUnits","Period","getPeriod","PMT","getPMT","round_two","float","formula_Simple","r","t","formula_Compound","formula_Contribute","pmt","formula_PV","FV","Cal_Simple","MIN_VALUE","MAX_VALUE","REV_VALUE","obj","year","예상수익범위","예상수익","현재가치","Cal_Compound","Cal_Compound_Contribution","data","map","console","log","CON_handleChange","event","target","value","PER_handleChange","marginTop","margin","top","bottom","fontSize","right","marginRight","display","Value","index","marginLeft"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACIC,aADJ,EAEIC,KAFJ,EAGIC,KAHJ,EAIIC,OAJJ,EAKIC,MALJ,EAMIC,aANJ,EAOIC,IAPJ,EAQIC,IARJ,QASO,UATP;AAUA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,SAASC,WAAT,OAA2C;AAAA;;AAAA,MAAtB;AAAEC,IAAAA,CAAF;AAAKC,IAAAA,GAAL;AAAUC,IAAAA,GAAV;AAAeC,IAAAA;AAAf,GAAsB;AACvC;AACA;AACA,QAAMC,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,EAA/B,CAAb;AACA,QAAMC,YAAY,GAAG,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,EAA6B,GAA7B,EAAkC,GAAlC,EAAuC,GAAvC,EAA4C,GAA5C,EAAiD,IAAjD,CAArB,CAJuC,CAIsC;;AAC7E,QAAMC,aAAa,GAAG,CAAtB,CALuC,CAKd;;AACzB,WAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,QAAIC,WAAW,GAAGD,KAAlB;;AAEA,QAAIC,WAAW,GAAG,KAAlB,EAAyB;AACrBA,MAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWF,WAAW,GAAG,EAAzB,IAA+B,EAA7C;AACH;;AAED,WAAOA,WAAW,IAAI,KAAtB,EAA6B;AACzBA,MAAAA,WAAW,IAAI,KAAf;AACH;;AACD,WAAOG,QAAQ,CAACH,WAAD,CAAf;AACH;;AAED,WAASI,SAAT,CAAmBL,KAAnB,EAA0B;AACtB,UAAMM,KAAK,GAAG,CAAC,IAAD,EAAO,IAAP,CAAd;AACA,QAAIC,SAAS,GAAG,CAAhB;;AAEA,WAAOP,KAAK,IAAI,KAAT,IAAkBO,SAAS,GAAGD,KAAK,CAACE,MAAN,GAAe,CAApD,EAAuD;AACnDD,MAAAA,SAAS,IAAI,CAAb;AACAP,MAAAA,KAAK,IAAI,KAAT;AACH;;AACD,WAAOM,KAAK,CAACC,SAAD,CAAZ;AACH;;AAED,QAAME,QAAQ,GAAGV,SAAS,CAACP,CAAD,CAA1B;AACA,QAAMkB,QAAQ,GAAGL,SAAS,CAACb,CAAD,CAA1B;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBlC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACmC,GAAD,EAAMC,MAAN,IAAgBpC,QAAQ,CAAC,CAAD,CAA9B,CAjCuC,CAmCvC;;AACA,WAASqC,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,WAAOd,IAAI,CAACC,KAAL,CAAWa,KAAK,GAAG,GAAnB,IAA0B,GAAjC;AACH,GAtCsC,CAuCvC;;;AACA,WAASC,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8B;AAC1B,WAAOV,QAAQ,GAAIS,CAAC,GAAG,GAAL,GAAYT,QAAZ,GAAuBU,CAAzC;AACH,GA1CsC,CA2CvC;;;AACA,WAASC,gBAAT,CAA0BF,CAA1B,EAA6BC,CAA7B,EAAgC;AAC5B,WAAOV,QAAQ,GAAG,CAACS,CAAC,GAAG,GAAJ,GAAU,CAAX,KAAiBC,CAAnC;AACH,GA9CsC,CA+CvC;;;AACA,WAASE,kBAAT,CAA4BH,CAA5B,EAA+BC,CAA/B,EAAkC;AAC9B,UAAMG,GAAG,GAAGZ,QAAQ,KAAK,IAAb,GAAoBG,GAAG,GAAG,KAA1B,GAAkCA,GAA9C;;AACA,QAAGK,CAAC,KAAK,CAAT,EAAW;AACP,aAAQI,GAAG,IAAI,CAAC,IAAIJ,CAAC,GAAG,GAAT,KAAiBC,CAAjB,GAAqB,CAAzB,CAAJ,IAAoCD,CAAC,GAAG,GAAxC,CAAP;AACH,KAFD,MAGK;AAAE;AACH,aAAOI,GAAG,GAAGH,CAAb;AACH;AACJ,GAxDsC,CAyDvC;;;AACA,WAASI,UAAT,CAAoBC,EAApB,EAAwBL,CAAxB,EAA2B;AACvB,WAAOK,EAAE,GAAG,CAAC,IAAI1B,aAAa,GAAG,GAArB,KAA6BqB,CAAzC;AACH,GA5DsC,CA8DvC;;;AACA,WAASM,UAAT,CAAoBN,CAApB,EAAuB;AACnB,UAAMO,SAAS,GAAGT,cAAc,CAACxB,GAAD,EAAM0B,CAAN,CAAhC;AACA,UAAMQ,SAAS,GAAGV,cAAc,CAACvB,GAAD,EAAMyB,CAAN,CAAhC;AACA,UAAMS,SAAS,GAAGX,cAAc,CAACtB,GAAD,EAAMwB,CAAN,CAAhC;AACA,UAAMU,GAAG,GAAG;AACRC,MAAAA,IAAI,EAAEX,CAAC,GAAG,GADF;AAERY,MAAAA,MAAM,EAAE,CAAChB,SAAS,CAACW,SAAD,CAAV,EAAuBX,SAAS,CAACY,SAAD,CAAhC,CAFA;AAGRK,MAAAA,IAAI,EAAEjB,SAAS,CAACa,SAAD,CAHP;AAIRK,MAAAA,IAAI,EAAElB,SAAS,CAACQ,UAAU,CAACK,SAAD,EAAYT,CAAZ,CAAX;AAJP,KAAZ;AAMA,WAAOU,GAAP;AACH,GA1EsC,CA4EvC;AACA;;;AACA,WAASK,YAAT,CAAsBf,CAAtB,EAAyB;AACrB,UAAMO,SAAS,GAAGN,gBAAgB,CAAC3B,GAAD,EAAM0B,CAAN,CAAlC;AACA,UAAMQ,SAAS,GAAGP,gBAAgB,CAAC1B,GAAD,EAAMyB,CAAN,CAAlC;AACA,UAAMS,SAAS,GAAGR,gBAAgB,CAACzB,GAAD,EAAMwB,CAAN,CAAlC;AACA,UAAMU,GAAG,GAAG;AACRC,MAAAA,IAAI,EAAEX,CAAC,GAAG,GADF;AAERY,MAAAA,MAAM,EAAE,CAAChB,SAAS,CAACW,SAAD,CAAV,EAAuBX,SAAS,CAACY,SAAD,CAAhC,CAFA;AAGRK,MAAAA,IAAI,EAAEjB,SAAS,CAACa,SAAD,CAHP;AAIRK,MAAAA,IAAI,EAAElB,SAAS,CAACQ,UAAU,CAACK,SAAD,EAAYT,CAAZ,CAAX;AAJP,KAAZ;AAMA,WAAOU,GAAP;AACH,GAzFsC,CA2FvC;AACA;;;AACA,WAASM,yBAAT,CAAmChB,CAAnC,EAAsC;AAClC,UAAMO,SAAS,GAAGN,gBAAgB,CAAC3B,GAAD,EAAM0B,CAAN,CAAhB,GAA2BE,kBAAkB,CAAC5B,GAAD,EAAM0B,CAAN,CAA/D;AACA,UAAMQ,SAAS,GAAGP,gBAAgB,CAAC1B,GAAD,EAAMyB,CAAN,CAAhB,GAA2BE,kBAAkB,CAAC3B,GAAD,EAAMyB,CAAN,CAA/D;AACA,UAAMS,SAAS,GAAGR,gBAAgB,CAACzB,GAAD,EAAMwB,CAAN,CAAhB,GAA2BE,kBAAkB,CAAC1B,GAAD,EAAMwB,CAAN,CAA/D;AACA,UAAMU,GAAG,GAAG;AACRC,MAAAA,IAAI,EAAEX,CAAC,GAAG,GADF;AAERY,MAAAA,MAAM,EAAE,CAAChB,SAAS,CAACW,SAAD,CAAV,EAAuBX,SAAS,CAACY,SAAD,CAAhC,CAFA;AAGRK,MAAAA,IAAI,EAAEjB,SAAS,CAACa,SAAD,CAHP;AAIRK,MAAAA,IAAI,EAAElB,SAAS,CAACQ,UAAU,CAACK,SAAD,EAAYT,CAAZ,CAAX;AAJP,KAAZ;AAMA,WAAOU,GAAP;AACH,GAxGsC,CA0GvC;;;AACA,QAAMO,IAAI,GAAGxC,IAAI,CAACyC,GAAL,CAAS,UAAUlB,CAAV,EAAa;AAC/B,WAAOgB,yBAAyB,CAAChB,CAAD,CAAhC;AACH,GAFY,CAAb;AAIAmB,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EA/GuC,CAiHvC;;AACA,QAAMI,gBAAgB,GAAIC,KAAD,IAAW;AAChC3B,IAAAA,MAAM,CAAC2B,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAN;AACH,GAFD,CAlHuC,CAsHvC;;;AACA,QAAMC,gBAAgB,GAAIH,KAAD,IAAW;AAChC7B,IAAAA,SAAS,CAAC6B,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACH,GAFD;;AAIA,sBACE;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAAEE,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,8BACE;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AACE,QAAA,KAAK,EAAE,GADT;AAEE,QAAA,MAAM,EAAE,GAFV;AAGE,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAE,EAAP;AAAWC,UAAAA,MAAM,EAAE;AAAnB,SAHV;AAIE,QAAA,IAAI,EAAEZ,IAJR;AAAA,gCAME,QAAC,KAAD;AACE,UAAA,OAAO,EAAC,MADV;AAEE,UAAA,IAAI,EAAE;AAAEa,YAAAA,QAAQ,EAAE;AAAZ,WAFR;AAGE,UAAA,OAAO,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT;AAHX;AAAA;AAAA;AAAA;AAAA,gBANF,eAWE,QAAC,KAAD;AACE,UAAA,IAAI,EAAExC,QADR;AAEE,UAAA,IAAI,EAAE;AAAEuC,YAAAA,QAAQ,EAAE;AAAZ,WAFR;AAGE,UAAA,OAAO,EAAE;AAAED,YAAAA,MAAM,EAAE;AAAV;AAHX;AAAA;AAAA;AAAA;AAAA,gBAXF,eAgBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAiBE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAkBE,QAAC,aAAD;AAAe,UAAA,MAAM,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAlBF,eAmBE,QAAC,IAAD;AACE,UAAA,IAAI,EAAEvC,QADR;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,OAAO,EAAC,sCAHV;AAIE,UAAA,IAAI,EAAC,SAJP;AAKE,UAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,gBAnBF,eA0BE,QAAC,IAAD;AACE,UAAA,IAAI,EAAEA,QADR;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,OAAO,EAAC,0BAHV;AAIE,UAAA,MAAM,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,gBA1BF,eAgCE,QAAC,IAAD;AACE,UAAA,IAAI,EAAEA,QADR;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,OAAO,EAAC,0BAHV;AAIE,UAAA,MAAM,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,gBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAyCE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAM,UAAA,KAAK,EAAE;AAAEyC,YAAAA,WAAW,EAAE;AAAf,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAAT;AAAA,iCACE,QAAC,WAAD;AAAa,YAAA,OAAO,EAAC,UAArB;AAAgC,YAAA,IAAI,EAAC,OAArC;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,2BADV;AAEE,cAAA,EAAE,EAAC,qBAFL;AAGE,cAAA,KAAK,EAAEvC,GAHT;AAIE,cAAA,KAAK,EAAC,cAJR;AAKE,cAAA,QAAQ,EAAE2B,gBALZ;AAME,cAAA,YAAY,EAAE,CANhB;AAAA,wBAQG3C,YAAY,CAACwC,GAAb,CAAiB,CAACgB,KAAD,EAAQC,KAAR,KAAkB;AAClC,oCACE,QAAC,QAAD;AAAsB,kBAAA,KAAK,EAAED,KAA7B;AAAA,6BACGA,KADH;AAAA,mBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,wBADF;AAKD,eANA;AARH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAsBE;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,UAAU,EAAE,QAAd;AAAwBJ,YAAAA,WAAW,EAAE;AAArC,WAAb;AAAA,qBACG,GADH,4CAEW,GAFX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBF,eA0BE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAAT;AAAA,iCACE,QAAC,WAAD;AAAa,YAAA,OAAO,EAAC,UAArB;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,mBADV;AAEE,cAAA,EAAE,EAAC,aAFL;AAGE,cAAA,KAAK,EAAEzC,MAHT;AAIE,cAAA,KAAK,EAAC,QAJR;AAKE,cAAA,QAAQ,EAAEiC,gBALZ;AAME,cAAA,YAAY,EAAE,CANhB;AAAA,wBAQGhD,IAAI,CAACyC,GAAL,CAAS,CAACgB,KAAD,EAAQC,KAAR,KAAkB;AAC1B,oCACE,QAAC,QAAD;AAAsB,kBAAA,KAAK,EAAED,KAA7B;AAAA,6BACGA,KADH;AAAA,mBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,wBADF;AAKD,eANA;AARH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA1BF,eA8CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9CF,eA+CE;AAAA,wDACS,GADT,eAEE;AAAA,uBACGlB,IAAI,CAACzB,MAAM,GAAG,CAAV,CAAJ,CAAiBqB,IADpB,EAEGtB,QAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,sCAOE;AAAA;AAAA;AAAA;AAAA,kBAPF,yDAQc,GARd,eASE;AAAA,uBACG0B,IAAI,CAACzB,MAAM,GAAG,CAAV,CAAJ,CAAiBsB,IADpB,EAEGvB,QAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/CF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6GH;;GAxOQnB,W;;KAAAA,W;AA0OT,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n    ComposedChart,\n    XAxis,\n    YAxis,\n    Tooltip,\n    Legend,\n    CartesianGrid,\n    Area,\n    Line,\n} from \"recharts\";\nimport Box from \"@mui/material/Box\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nfunction ProfitGraph({ P, Min, Max, Pro }) {\n    //단리, 복리 => 년 단위로 계산\n    //적립식 복리 : Compound + Contribute\n    const Year = [0, 5, 10, 15, 20, 25, 30, 35, 40];\n    const Contribution = [0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000]; //적립금액\n    const inflationRate = 2; //물가 상승률\n    function cov_Money(Money) {\n        let scaledValue = Money;\n\n        if (scaledValue < 10000) {\n            scaledValue = Math.round(scaledValue / 10) * 10;\n        }\n\n        while (scaledValue >= 10000) {\n            scaledValue /= 10000;\n        }\n        return parseInt(scaledValue);\n    }\n\n    function cov_Units(Money) {\n        const units = [\"만원\", \"억원\"];\n        let unitIndex = 0;\n\n        while (Money >= 10000 && unitIndex < units.length - 1) {\n            unitIndex += 1;\n            Money /= 10000;\n        }\n        return units[unitIndex];\n    }\n\n    const covMoney = cov_Money(P);\n    const covUnits = cov_Units(P);\n    const [Period, getPeriod] = useState(15);\n    const [PMT, getPMT] = useState(0);\n\n    //소수점 둘째 자리 반올림\n    function round_two(float) {\n        return Math.round(float * 1e2) / 1e2;\n    }\n    //단리 공식\n    function formula_Simple(r, t) {\n        return covMoney + (r / 100) * covMoney * t;\n    }\n    //복리 공식\n    function formula_Compound(r, t) {\n        return covMoney * (r / 100 + 1) ** t;\n    }\n    //적립식 복리 공식\n    function formula_Contribute(r, t) {\n        const pmt = covUnits === \"억원\" ? PMT / 10000 : PMT;\n        if(r !== 0){\n            return (pmt * ((1 + r / 100) ** t - 1)) / (r / 100);\n        }\n        else { //이자율이 0인 경우, 계산식 분모에 0이 들어가면서 값이 무한대로 수렴 -> 예외처리\n            return pmt * t;\n        }\n    }\n    //현재가치 공식\n    function formula_PV(FV, t) {\n        return FV / (1 + inflationRate / 100) ** t;\n    }\n\n    //단리 계산기\n    function Cal_Simple(t) {\n        const MIN_VALUE = formula_Simple(Min, t);\n        const MAX_VALUE = formula_Simple(Max, t);\n        const REV_VALUE = formula_Simple(Pro, t);\n        const obj = {\n            year: t + \"년\",\n            예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n            예상수익: round_two(REV_VALUE),\n            현재가치: round_two(formula_PV(REV_VALUE, t)),\n        };\n        return obj;\n    }\n\n    //복리 계산기\n    //*년복리\n    function Cal_Compound(t) {\n        const MIN_VALUE = formula_Compound(Min, t);\n        const MAX_VALUE = formula_Compound(Max, t);\n        const REV_VALUE = formula_Compound(Pro, t);\n        const obj = {\n            year: t + \"년\",\n            예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n            예상수익: round_two(REV_VALUE),\n            현재가치: round_two(formula_PV(REV_VALUE, t)),\n        };\n        return obj;\n    }\n\n    //적립식 복리 계산기\n    //*년복리\n    function Cal_Compound_Contribution(t) {\n        const MIN_VALUE = formula_Compound(Min, t) + formula_Contribute(Min, t);\n        const MAX_VALUE = formula_Compound(Max, t) + formula_Contribute(Max, t);\n        const REV_VALUE = formula_Compound(Pro, t) + formula_Contribute(Pro, t);\n        const obj = {\n            year: t + \"년\",\n            예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n            예상수익: round_two(REV_VALUE),\n            현재가치: round_two(formula_PV(REV_VALUE, t)),\n        };\n        return obj;\n    }\n\n    //데이터 세팅\n    const data = Year.map(function (t) {\n        return Cal_Compound_Contribution(t);\n    });\n\n    console.log(data);\n\n    //Contribution handleChange\n    const CON_handleChange = (event) => {\n        getPMT(event.target.value);\n    };\n\n    //Period handleChange\n    const PER_handleChange = (event) => {\n        getPeriod(event.target.value);\n    };\n\n    return (\n      <div>\n        <div style={{ marginTop: \"1rem\" }}>\n          <h3 style={{ margin: \"0.3rem 0\" }}>📈 예상 수익률 그래프</h3>\n          <ComposedChart\n            width={400}\n            height={250}\n            margin={{ top: 20, bottom: 20 }}\n            data={data}\n          >\n            <XAxis\n              dataKey=\"year\"\n              tick={{ fontSize: 10 }}\n              padding={{ right: 20 }}\n            />\n            <YAxis\n              unit={covUnits}\n              tick={{ fontSize: 10 }}\n              padding={{ bottom: 10 }}\n            />\n            <Tooltip />\n            <Legend tick={{ fontSize: 10 }} />\n            <CartesianGrid stroke=\"#f4f4f4\" />\n            <Area\n              unit={covUnits}\n              type=\"monotone\"\n              dataKey=\"예상수익범위\"\n              fill=\"#FFB950\"\n              stroke=\"#FFB950\"\n            />\n            <Line\n              unit={covUnits}\n              type=\"monotone\"\n              dataKey=\"예상수익\"\n              stroke=\"#1D1A82\"\n            />\n            <Line\n              unit={covUnits}\n              type=\"monotone\"\n              dataKey=\"현재가치\"\n              stroke=\"#B45CCA\"\n            />\n          </ComposedChart>\n          <div className=\"Discription\">\n            <span style={{ marginRight: \"0.3rem\" }}>매년 </span>\n            <Box sx={{ display: \"flex\" }}>\n              <FormControl variant=\"standard\" size=\"small\">\n                <Select\n                  labelId=\"contribution-select-label\"\n                  id=\"contribution-select\"\n                  value={PMT}\n                  label=\"만원\"\n                  onChange={CON_handleChange}\n                  defaultValue={0}\n                >\n                  {Contribution.map((Value, index) => {\n                    return (\n                      <MenuItem key={index} value={Value}>\n                        {Value}만원\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            </Box>\n            <span style={{ marginLeft: \"0.3rem\", marginRight: \"0.3rem\" }}>\n              {\" \"}\n              을 적립했을 때{\" \"}\n            </span>\n            <Box sx={{ display: \"flex\" }}>\n              <FormControl variant=\"standard\">\n                <Select\n                  labelId=\"year-select-label\"\n                  id=\"year-select\"\n                  value={Period}\n                  label=\"년\"\n                  onChange={PER_handleChange}\n                  defaultValue={0}\n                >\n                  {Year.map((Value, index) => {\n                    return (\n                      <MenuItem key={index} value={Value}>\n                        {Value}년\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            </Box>\n            <span> 뒤의 </span>\n            <span>\n              예상 수익은{\" \"}\n              <b>\n                {data[Period / 5].예상수익}\n                {covUnits}\n              </b>\n              입니다.\n              <br />\n              (현재 가치로 환산시{\" \"}\n              <b>\n                {data[Period / 5].현재가치}\n                {covUnits}\n              </b>\n              )\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default ProfitGraph;\n"]},"metadata":{},"sourceType":"module"}