{"ast":null,"code":"var _jsxFileName = \"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/Graph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ComposedChart, XAxis, YAxis, Tooltip, Legend, CartesianGrid, Area, Line } from \"recharts\";\nimport Box from \"@mui/material/Box\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Graph(_ref) {\n  _s();\n\n  let {\n    P,\n    Min,\n    Max,\n    Rev\n  } = _ref;\n  //단리, 복리 => 년 단위로 계산\n  //적립식 복리 : Compound + Contribute\n  const Year = [0, 5, 10, 15, 20, 25, 30, 35, 40];\n  const Contribution = [0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000]; //적립금액\n\n  const inflationRate = 2; //물가 상승률\n\n  function cov_Money(Money) {\n    let scaledValue = Money;\n\n    if (scaledValue < 10000) {\n      scaledValue = Math.round(scaledValue / 10) * 10;\n    }\n\n    while (scaledValue >= 10000) {\n      scaledValue /= 10000;\n    }\n\n    return parseInt(scaledValue);\n  }\n\n  function cov_Units(Money) {\n    const units = [\"만원\", \"억원\"];\n    let unitIndex = 0;\n\n    while (Money >= 10000 && unitIndex < units.length - 1) {\n      unitIndex += 1;\n      Money /= 10000;\n    }\n\n    return units[unitIndex];\n  }\n\n  const covMoney = cov_Money(P);\n  const covUnits = cov_Units(P);\n  const [Period, getPeriod] = useState(15);\n  const [PMT, getPMT] = useState(0); //소수점 둘째 자리 반올림\n\n  function round_two(float) {\n    return Math.round(float * 1e2) / 1e2;\n  } //단리 공식\n\n\n  function formula_Simple(r, t) {\n    return covMoney + r / 100 * covMoney * t;\n  } //복리 공식\n\n\n  function formula_Compound(r, t) {\n    return covMoney * (r / 100 + 1) ** t;\n  } //적립식 복리 공식\n\n\n  function formula_Contribute(r, t) {\n    const pmt = covUnits === \"억원\" ? PMT / 10000 : PMT;\n    return pmt * ((1 + r / 100) ** t - 1) / (r / 100);\n  } //현재가치 공식\n\n\n  function formula_PV(FV, t) {\n    return FV / (1 + inflationRate / 100) ** t;\n  } //단리 계산기\n\n\n  function Cal_Simple(t) {\n    const MIN_VALUE = formula_Simple(Min, t);\n    const MAX_VALUE = formula_Simple(Max, t);\n    const REV_VALUE = formula_Simple(Rev, t);\n    const obj = {\n      year: t + \"년\",\n      예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n      예상수익: round_two(REV_VALUE),\n      현재가치: round_two(formula_PV(REV_VALUE, t))\n    };\n    return obj;\n  } //복리 계산기\n  //*년복리\n\n\n  function Cal_Compound(t) {\n    const MIN_VALUE = formula_Compound(Min, t);\n    const MAX_VALUE = formula_Compound(Max, t);\n    const REV_VALUE = formula_Compound(Rev, t);\n    const obj = {\n      year: t + \"년\",\n      예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n      예상수익: round_two(REV_VALUE),\n      현재가치: round_two(formula_PV(REV_VALUE, t))\n    };\n    return obj;\n  } //적립식 복리 계산기\n  //*년복리\n\n\n  function Cal_Compound_Contribution(t) {\n    const MIN_VALUE = formula_Compound(Min, t) + formula_Contribute(Min, t);\n    const MAX_VALUE = formula_Compound(Max, t) + formula_Contribute(Max, t);\n    const REV_VALUE = formula_Compound(Rev, t) + formula_Contribute(Rev, t);\n    const obj = {\n      year: t + \"년\",\n      예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n      예상수익: round_two(REV_VALUE),\n      현재가치: round_two(formula_PV(REV_VALUE, t))\n    };\n    return obj;\n  } //데이터 세팅\n\n\n  const data = Year.map(function (t) {\n    return Cal_Compound_Contribution(t);\n  });\n  console.log(formula_Contribute(r, t)); //Contribution handleChange\n\n  const CON_handleChange = event => {\n    getPMT(event.target.value);\n  }; //Period handleChange\n\n\n  const PER_handleChange = event => {\n    getPeriod(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ComposedChart, {\n      width: 400,\n      height: 250,\n      margin: {\n        top: 20,\n        bottom: 20\n      },\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"year\",\n        tick: {\n          fontSize: 10\n        },\n        padding: {\n          right: 20\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        unit: covUnits,\n        tick: {\n          fontSize: 10\n        },\n        padding: {\n          bottom: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        tick: {\n          fontSize: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        stroke: \"#f4f4f4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Area, {\n        unit: covUnits,\n        type: \"monotone\",\n        dataKey: \"\\uC608\\uC0C1\\uC218\\uC775\\uBC94\\uC704\",\n        fill: \"#FFB950\",\n        stroke: \"#FFB950\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        unit: covUnits,\n        type: \"monotone\",\n        dataKey: \"\\uC608\\uC0C1\\uC218\\uC775\",\n        stroke: \"#1D1A82\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        unit: covUnits,\n        type: \"monotone\",\n        dataKey: \"\\uD604\\uC7AC\\uAC00\\uCE58\",\n        stroke: \"#B45CCA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Discription\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginRight: \"0.3rem\"\n        },\n        children: \"\\uB9E4\\uB144 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\"\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"standard\",\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"contribution-select-label\",\n            id: \"contribution-select\",\n            value: PMT,\n            label: \"\\uB9CC\\uC6D0\",\n            onChange: CON_handleChange,\n            defaultValue: 0,\n            children: Contribution.map((Value, index) => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: Value,\n                children: [Value, \"\\uB9CC\\uC6D0\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: \"0.3rem\",\n          marginRight: \"0.3rem\"\n        },\n        children: [\" \", \"\\uC744 \\uC801\\uB9BD\\uD588\\uC744 \\uB54C\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\"\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"standard\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"year-select-label\",\n            id: \"year-select\",\n            value: Period,\n            label: \"\\uB144\",\n            onChange: PER_handleChange,\n            defaultValue: 0,\n            children: Year.map((Value, index) => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: Value,\n                children: [Value, \"\\uB144\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" \\uB4A4\\uC758 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\uC608\\uC0C1 \\uC218\\uC775\\uC740\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [data[Period / 5].예상수익, covUnits]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), \"\\uC785\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), \"(\\uD604\\uC7AC \\uAC00\\uCE58\\uB85C \\uD658\\uC0B0\\uC2DC\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [data[Period / 5].현재가치, covUnits]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Graph, \"IAycEhEGN4rdiJ6F99XhcyepmaE=\");\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/Graph.js"],"names":["React","useState","ComposedChart","XAxis","YAxis","Tooltip","Legend","CartesianGrid","Area","Line","Box","MenuItem","FormControl","Select","Graph","P","Min","Max","Rev","Year","Contribution","inflationRate","cov_Money","Money","scaledValue","Math","round","parseInt","cov_Units","units","unitIndex","length","covMoney","covUnits","Period","getPeriod","PMT","getPMT","round_two","float","formula_Simple","r","t","formula_Compound","formula_Contribute","pmt","formula_PV","FV","Cal_Simple","MIN_VALUE","MAX_VALUE","REV_VALUE","obj","year","예상수익범위","예상수익","현재가치","Cal_Compound","Cal_Compound_Contribution","data","map","console","log","CON_handleChange","event","target","value","PER_handleChange","top","bottom","fontSize","right","marginRight","display","Value","index","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n    ComposedChart,\n    XAxis,\n    YAxis,\n    Tooltip,\n    Legend,\n    CartesianGrid,\n    Area,\n    Line,\n} from \"recharts\";\nimport Box from \"@mui/material/Box\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nfunction Graph({ P, Min, Max, Rev }) {\n    //단리, 복리 => 년 단위로 계산\n    //적립식 복리 : Compound + Contribute\n    const Year = [0, 5, 10, 15, 20, 25, 30, 35, 40];\n    const Contribution = [0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000]; //적립금액\n    const inflationRate = 2; //물가 상승률\n    function cov_Money(Money) {\n        let scaledValue = Money;\n\n        if (scaledValue < 10000) {\n            scaledValue = Math.round(scaledValue / 10) * 10;\n        }\n\n        while (scaledValue >= 10000) {\n            scaledValue /= 10000;\n        }\n        return parseInt(scaledValue);\n    }\n\n    function cov_Units(Money) {\n        const units = [\"만원\", \"억원\"];\n        let unitIndex = 0;\n\n        while (Money >= 10000 && unitIndex < units.length - 1) {\n            unitIndex += 1;\n            Money /= 10000;\n        }\n        return units[unitIndex];\n    }\n\n    const covMoney = cov_Money(P);\n    const covUnits = cov_Units(P);\n    const [Period, getPeriod] = useState(15);\n    const [PMT, getPMT] = useState(0);\n\n    //소수점 둘째 자리 반올림\n    function round_two(float) {\n        return Math.round(float * 1e2) / 1e2;\n    }\n    //단리 공식\n    function formula_Simple(r, t) {\n        return covMoney + (r / 100) * covMoney * t;\n    }\n    //복리 공식\n    function formula_Compound(r, t) {\n        return covMoney * (r / 100 + 1) ** t;\n    }\n    //적립식 복리 공식\n    function formula_Contribute(r, t) {\n        const pmt = covUnits === \"억원\" ? PMT / 10000 : PMT;\n        return (pmt * ((1 + r / 100) ** t - 1)) / (r / 100);\n    }\n    //현재가치 공식\n    function formula_PV(FV, t) {\n        return FV / (1 + inflationRate / 100) ** t;\n    }\n\n    //단리 계산기\n    function Cal_Simple(t) {\n        const MIN_VALUE = formula_Simple(Min, t);\n        const MAX_VALUE = formula_Simple(Max, t);\n        const REV_VALUE = formula_Simple(Rev, t);\n        const obj = {\n            year: t + \"년\",\n            예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n            예상수익: round_two(REV_VALUE),\n            현재가치: round_two(formula_PV(REV_VALUE, t)),\n        };\n        return obj;\n    }\n\n    //복리 계산기\n    //*년복리\n    function Cal_Compound(t) {\n        const MIN_VALUE = formula_Compound(Min, t);\n        const MAX_VALUE = formula_Compound(Max, t);\n        const REV_VALUE = formula_Compound(Rev, t);\n        const obj = {\n            year: t + \"년\",\n            예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n            예상수익: round_two(REV_VALUE),\n            현재가치: round_two(formula_PV(REV_VALUE, t)),\n        };\n        return obj;\n    }\n\n    //적립식 복리 계산기\n    //*년복리\n    function Cal_Compound_Contribution(t) {\n        const MIN_VALUE = formula_Compound(Min, t) + formula_Contribute(Min, t);\n        const MAX_VALUE = formula_Compound(Max, t) + formula_Contribute(Max, t);\n        const REV_VALUE = formula_Compound(Rev, t) + formula_Contribute(Rev, t);\n        const obj = {\n            year: t + \"년\",\n            예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n            예상수익: round_two(REV_VALUE),\n            현재가치: round_two(formula_PV(REV_VALUE, t)),\n        };\n        return obj;\n    }\n\n    //데이터 세팅\n    const data = Year.map(function (t) {\n        return Cal_Compound_Contribution(t);\n    });\n\n    console.log(formula_Contribute(r, t));\n\n    //Contribution handleChange\n    const CON_handleChange = (event) => {\n        getPMT(event.target.value);\n    };\n\n    //Period handleChange\n    const PER_handleChange = (event) => {\n        getPeriod(event.target.value);\n    };\n\n    return (\n        <div>\n            <ComposedChart\n                width={400}\n                height={250}\n                margin={{ top: 20, bottom: 20 }}\n                data={data}\n            >\n                <XAxis\n                    dataKey=\"year\"\n                    tick={{ fontSize: 10 }}\n                    padding={{ right: 20 }}\n                />\n                <YAxis\n                    unit={covUnits}\n                    tick={{ fontSize: 10 }}\n                    padding={{ bottom: 10 }}\n                />\n                <Tooltip />\n                <Legend tick={{ fontSize: 10 }} />\n                <CartesianGrid stroke=\"#f4f4f4\" />\n                <Area\n                    unit={covUnits}\n                    type=\"monotone\"\n                    dataKey=\"예상수익범위\"\n                    fill=\"#FFB950\"\n                    stroke=\"#FFB950\"\n                />\n                <Line\n                    unit={covUnits}\n                    type=\"monotone\"\n                    dataKey=\"예상수익\"\n                    stroke=\"#1D1A82\"\n                />\n                <Line\n                    unit={covUnits}\n                    type=\"monotone\"\n                    dataKey=\"현재가치\"\n                    stroke=\"#B45CCA\"\n                />\n            </ComposedChart>\n            <div className=\"Discription\">\n                <span style={{ marginRight: \"0.3rem\" }}>매년 </span>\n                <Box sx={{ display: \"flex\" }}>\n                    <FormControl variant=\"standard\" size=\"small\">\n                        <Select\n                            labelId=\"contribution-select-label\"\n                            id=\"contribution-select\"\n                            value={PMT}\n                            label=\"만원\"\n                            onChange={CON_handleChange}\n                            defaultValue={0}\n                        >\n                            {Contribution.map((Value, index) => {\n                                return (\n                                    <MenuItem key={index} value={Value}>\n                                        {Value}만원\n                                    </MenuItem>\n                                );\n                            })}\n                        </Select>\n                    </FormControl>\n                </Box>\n                <span style={{ marginLeft: \"0.3rem\", marginRight: \"0.3rem\" }}>\n                    {\" \"}\n                    을 적립했을 때{\" \"}\n                </span>\n                <Box sx={{ display: \"flex\" }}>\n                    <FormControl variant=\"standard\">\n                        <Select\n                            labelId=\"year-select-label\"\n                            id=\"year-select\"\n                            value={Period}\n                            label=\"년\"\n                            onChange={PER_handleChange}\n                            defaultValue={0}\n                        >\n                            {Year.map((Value, index) => {\n                                return (\n                                    <MenuItem key={index} value={Value}>\n                                        {Value}년\n                                    </MenuItem>\n                                );\n                            })}\n                        </Select>\n                    </FormControl>\n                </Box>\n                <span> 뒤의 </span>\n                <span>\n                    예상 수익은{\" \"}\n                    <b>\n                        {data[Period / 5].예상수익}\n                        {covUnits}\n                    </b>\n                    입니다.\n                    <br />\n                    (현재 가치로 환산시{\" \"}\n                    <b>\n                        {data[Period / 5].현재가치}\n                        {covUnits}\n                    </b>\n                    )\n                </span>\n            </div>\n        </div>\n    );\n}\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}