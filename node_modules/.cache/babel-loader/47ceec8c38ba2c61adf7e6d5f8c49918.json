{"ast":null,"code":"var _jsxFileName = \"/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/ProfitGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ComposedChart, XAxis, YAxis, Tooltip, Legend, CartesianGrid, Area, Line } from \"recharts\"; // import Box from \"@mui/material/Box\";\n// import MenuItem from \"@mui/material/MenuItem\";\n\nimport FormControl from \"@mui/material/FormControl\"; // import Select from \"@mui/material/Select\";\n\nimport { Box, InputAdornment, Input, MenuItem, Select } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfitGraph(_ref) {\n  _s();\n\n  let {\n    Min,\n    Max,\n    Pro\n  } = _ref;\n  //단리, 복리 => 년 단위로 계산\n  //적립식 복리 : Compound + Contribute\n  const Year = [0, 5, 10, 15, 20, 25, 30, 35, 40];\n  const Contribution = [0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000]; //적립금액\n\n  const inflationRate = 2; //물가 상승률\n  // function cov_Money(Money) {\n  //   let scaledValue = Money;\n  //   if (scaledValue < 10000) {\n  //     scaledValue = Math.round(scaledValue / 10) * 10;\n  //   }\n  //   while (scaledValue >= 10000) {\n  //     scaledValue /= 10000;\n  //   }\n  //   return parseInt(scaledValue);\n  // }\n  // function cov_Units(Money) {\n  //   const units = [\"만원\", \"억원\"];\n  //   let unitIndex = 0;\n  //   while (Money >= 10000 && unitIndex < units.length - 1) {\n  //     unitIndex += 1;\n  //     Money /= 10000;\n  //   }\n  //   return units[unitIndex];\n  // }\n\n  const [Period, getPeriod] = useState(15);\n  const [PP, setPP] = useState(150);\n  const [PMT, getPMT] = useState(0); //소수점 둘째 자리 반올림\n\n  function round_two(float) {\n    return Math.round(float * 1e2) / 1e2;\n  } //단리 공식\n\n\n  function formula_Simple(P, r, t) {\n    return P + r / 100 * P * t;\n  } //복리 공식\n\n\n  function formula_Compound(P, r, t) {\n    return P * (r / 100 + 1) ** t;\n  } //적립식 복리 공식\n\n\n  function formula_Contribute(pmt, r, t) {\n    // const pmt = covUnits === \"억원\" ? PMT / 10000 : PMT;\n    if (r !== 0) {\n      return pmt * ((1 + r / 100) ** t - 1) / (r / 100);\n    } else {\n      //이자율이 0인 경우, 계산식 분모에 0이 들어가면서 값이 무한대로 수렴 -> 예외처리\n      return pmt * t;\n    }\n  } //현재가치 공식\n\n\n  function formula_PV(FV, t) {\n    return FV / (1 + inflationRate / 100) ** t;\n  } //단리 계산기\n\n\n  function Cal_Simple(t) {\n    const MIN_VALUE = formula_Simple(PP, Min, t);\n    const MAX_VALUE = formula_Simple(PP, Max, t);\n    const PRO_VALUE = formula_Simple(PP, Pro, t);\n    const obj = {\n      year: t + \"년\",\n      예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n      예상수익: round_two(PRO_VALUE),\n      현재가치: round_two(formula_PV(PRO_VALUE, t))\n    };\n    return obj;\n  } //복리 계산기\n  //*년복리\n\n\n  function Cal_Compound(t) {\n    const MIN_VALUE = formula_Compound(PP, Min, t);\n    const MAX_VALUE = formula_Compound(PP, Max, t);\n    const PRO_VALUE = formula_Compound(PP, Pro, t);\n    const obj = {\n      year: t + \"년\",\n      예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n      예상수익: round_two(PRO_VALUE),\n      현재가치: round_two(formula_PV(PRO_VALUE, t))\n    };\n    return obj;\n  } //적립식 복리 계산기\n  //*년복리\n\n\n  function Cal_Compound_Contribution(t) {\n    const MIN_VALUE = formula_Compound(PP, Min, t) + formula_Contribute(PMT, Min, t);\n    const MAX_VALUE = formula_Compound(PP, Max, t) + formula_Contribute(PMT, Max, t);\n    const PRO_VALUE = formula_Compound(PP, Pro, t) + formula_Contribute(PMT, Pro, t);\n    const obj = {\n      year: t + \"년\",\n      예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n      예상수익: round_two(PRO_VALUE),\n      현재가치: round_two(formula_PV(PRO_VALUE, t))\n    };\n    return obj;\n  } //데이터 세팅\n\n\n  const data = Year.map(function (t) {\n    return Cal_Compound_Contribution(t);\n  }); // console.log(data);\n  //Contribution handleChange\n\n  const CON_handleChange = event => {\n    getPMT(event.target.value);\n  }; //Period handleChange\n\n\n  const PER_handleChange = event => {\n    getPeriod(event.target.value);\n  };\n\n  const PP_handlChange = event => {\n    setPP(event.target.value); // covMoney = cov_Money(PP);\n    // covUnits = cov_Units(PP);\n  };\n\n  console.log(PP);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        margin: \"0.3rem 0\"\n      },\n      children: \"\\uD83D\\uDCC8 \\uC608\\uC0C1 \\uC218\\uC775\\uB960 \\uADF8\\uB798\\uD504\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Description\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uCD08\\uAE30 \\uD22C\\uC790 \\uAE08\\uC561: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\"\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"standard\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            id: \"\\uCD08\\uAE30\\uD22C\\uC790\\uAE08\\uC561\",\n            value: PP,\n            onChange: PP_handlChange,\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: \"\\uB9CC\\uC6D0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this),\n            size: \"small\",\n            sx: {\n              width: \"100px\",\n              ml: \"0.5rem\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ComposedChart, {\n      width: 400,\n      height: 250,\n      margin: {\n        top: 20,\n        bottom: 20\n      },\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"year\",\n        tick: {\n          fontSize: 10\n        },\n        padding: {\n          right: 20\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis // unit={covUnits}\n      , {\n        unit: \"\\uB9CC\\uC6D0\",\n        domain: [\"auto\", \"auto\"],\n        tick: {\n          fontSize: 10\n        },\n        padding: {\n          bottom: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        tick: {\n          fontSize: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        stroke: \"#f4f4f4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Area // unit={covUnits}\n      , {\n        unit: \"\\uB9CC\\uC6D0\",\n        type: \"monotone\",\n        dataKey: \"\\uC608\\uC0C1\\uC218\\uC775\\uBC94\\uC704\",\n        fill: \"#FFB950\",\n        stroke: \"#FFB950\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line // unit={covUnits}\n      , {\n        unit: \"\\uB9CC\\uC6D0\",\n        type: \"monotone\",\n        dataKey: \"\\uC608\\uC0C1\\uC218\\uC775\",\n        stroke: \"#1D1A82\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line // unit={covUnits}\n      , {\n        unit: \"\\uB9CC\\uC6D0\",\n        type: \"monotone\",\n        dataKey: \"\\uD604\\uC7AC\\uAC00\\uCE58\",\n        stroke: \"#B45CCA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Description\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginRight: \"0.3rem\"\n        },\n        children: \"\\uB9E4\\uB144 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\"\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"standard\",\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"contribution-select-label\",\n            id: \"contribution-select\",\n            value: PMT,\n            label: \"\\uB9CC\\uC6D0\",\n            onChange: CON_handleChange,\n            defaultValue: 0,\n            children: Contribution.map((Value, index) => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: Value,\n                children: [Value, \"\\uB9CC\\uC6D0\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: \"0.3rem\",\n          marginRight: \"0.3rem\"\n        },\n        children: [\" \", \"\\uC744 \\uC801\\uB9BD\\uD588\\uC744 \\uB54C\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\"\n        },\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"standard\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"year-select-label\",\n            id: \"year-select\",\n            value: Period,\n            label: \"\\uB144\",\n            onChange: PER_handleChange,\n            defaultValue: 0,\n            children: Year.map((Value, index) => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: Value,\n                children: [Value, \"\\uB144\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" \\uB4A4\\uC758 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\uC608\\uC0C1 \\uC218\\uC775\\uC740\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [data[Period / 5].예상수익, \"\\uB9CC\\uC6D0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), \"\\uC785\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), \"(\\uD604\\uC7AC \\uAC00\\uCE58\\uB85C \\uD658\\uC0B0\\uC2DC\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [data[Period / 5].현재가치, \"\\uB9CC\\uC6D0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfitGraph, \"B5LakFQQ/xHfsqlc1GNnXE2S0RM=\");\n\n_c = ProfitGraph;\nexport default ProfitGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfitGraph\");","map":{"version":3,"sources":["/Users/kwonhyunmin/Documents/GitHub/Investment_Propensity/src/component/ProfitGraph.js"],"names":["React","useState","ComposedChart","XAxis","YAxis","Tooltip","Legend","CartesianGrid","Area","Line","FormControl","Box","InputAdornment","Input","MenuItem","Select","ProfitGraph","Min","Max","Pro","Year","Contribution","inflationRate","Period","getPeriod","PP","setPP","PMT","getPMT","round_two","float","Math","round","formula_Simple","P","r","t","formula_Compound","formula_Contribute","pmt","formula_PV","FV","Cal_Simple","MIN_VALUE","MAX_VALUE","PRO_VALUE","obj","year","예상수익범위","예상수익","현재가치","Cal_Compound","Cal_Compound_Contribution","data","map","CON_handleChange","event","target","value","PER_handleChange","PP_handlChange","console","log","marginTop","margin","display","width","ml","top","bottom","fontSize","right","marginRight","Value","index","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  ComposedChart,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  CartesianGrid,\n  Area,\n  Line,\n} from \"recharts\";\n// import Box from \"@mui/material/Box\";\n// import MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\n// import Select from \"@mui/material/Select\";\nimport { Box, InputAdornment, Input, MenuItem, Select } from \"@mui/material\";\n\nfunction ProfitGraph({ Min, Max, Pro }) {\n  //단리, 복리 => 년 단위로 계산\n  //적립식 복리 : Compound + Contribute\n  const Year = [0, 5, 10, 15, 20, 25, 30, 35, 40];\n  const Contribution = [0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000]; //적립금액\n  const inflationRate = 2; //물가 상승률\n  // function cov_Money(Money) {\n  //   let scaledValue = Money;\n\n  //   if (scaledValue < 10000) {\n  //     scaledValue = Math.round(scaledValue / 10) * 10;\n  //   }\n\n  //   while (scaledValue >= 10000) {\n  //     scaledValue /= 10000;\n  //   }\n  //   return parseInt(scaledValue);\n  // }\n\n  // function cov_Units(Money) {\n  //   const units = [\"만원\", \"억원\"];\n  //   let unitIndex = 0;\n\n  //   while (Money >= 10000 && unitIndex < units.length - 1) {\n  //     unitIndex += 1;\n  //     Money /= 10000;\n  //   }\n  //   return units[unitIndex];\n  // }\n\n  const [Period, getPeriod] = useState(15);\n  const [PP, setPP] = useState(150);\n  const [PMT, getPMT] = useState(0);\n\n  //소수점 둘째 자리 반올림\n  function round_two(float) {\n    return Math.round(float * 1e2) / 1e2;\n  }\n  //단리 공식\n  function formula_Simple(P, r, t) {\n    return P + (r / 100) * P * t;\n  }\n  //복리 공식\n  function formula_Compound(P, r, t) {\n    return P * (r / 100 + 1) ** t;\n  }\n  //적립식 복리 공식\n  function formula_Contribute(pmt, r, t) {\n    // const pmt = covUnits === \"억원\" ? PMT / 10000 : PMT;\n    if (r !== 0) {\n      return (pmt * ((1 + r / 100) ** t - 1)) / (r / 100);\n    } else {\n      //이자율이 0인 경우, 계산식 분모에 0이 들어가면서 값이 무한대로 수렴 -> 예외처리\n      return pmt * t;\n    }\n  }\n  //현재가치 공식\n  function formula_PV(FV, t) {\n    return FV / (1 + inflationRate / 100) ** t;\n  }\n\n  //단리 계산기\n  function Cal_Simple(t) {\n    const MIN_VALUE = formula_Simple(PP, Min, t);\n    const MAX_VALUE = formula_Simple(PP, Max, t);\n    const PRO_VALUE = formula_Simple(PP, Pro, t);\n    const obj = {\n      year: t + \"년\",\n      예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n      예상수익: round_two(PRO_VALUE),\n      현재가치: round_two(formula_PV(PRO_VALUE, t)),\n    };\n    return obj;\n  }\n\n  //복리 계산기\n  //*년복리\n  function Cal_Compound(t) {\n    const MIN_VALUE = formula_Compound(PP, Min, t);\n    const MAX_VALUE = formula_Compound(PP, Max, t);\n    const PRO_VALUE = formula_Compound(PP, Pro, t);\n    const obj = {\n      year: t + \"년\",\n      예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n      예상수익: round_two(PRO_VALUE),\n      현재가치: round_two(formula_PV(PRO_VALUE, t)),\n    };\n    return obj;\n  }\n\n  //적립식 복리 계산기\n  //*년복리\n  function Cal_Compound_Contribution(t) {\n    const MIN_VALUE = formula_Compound(PP, Min, t) + formula_Contribute(PMT, Min, t);\n    const MAX_VALUE = formula_Compound(PP, Max, t) + formula_Contribute(PMT, Max, t);\n    const PRO_VALUE = formula_Compound(PP, Pro, t) + formula_Contribute(PMT, Pro, t);\n    const obj = {\n      year: t + \"년\",\n      예상수익범위: [round_two(MIN_VALUE), round_two(MAX_VALUE)],\n      예상수익: round_two(PRO_VALUE),\n      현재가치: round_two(formula_PV(PRO_VALUE, t)),\n    };\n    return obj;\n  }\n\n  //데이터 세팅\n  const data = Year.map(function (t) {\n    return Cal_Compound_Contribution(t);\n  });\n\n  // console.log(data);\n\n  //Contribution handleChange\n  const CON_handleChange = (event) => {\n    getPMT(event.target.value);\n  };\n\n  //Period handleChange\n  const PER_handleChange = (event) => {\n    getPeriod(event.target.value);\n  };\n\n  const PP_handlChange = (event) => {\n    setPP(event.target.value);\n    // covMoney = cov_Money(PP);\n    // covUnits = cov_Units(PP);\n  }\n\n  console.log(PP);\n\n  return (\n    <div style={{ marginTop: \"1rem\" }}>\n      {/* <div style={{ marginTop: \"1rem\" }}> */}\n      <h3 style={{ margin: \"0.3rem 0\" }}>📈 예상 수익률 그래프</h3>\n      <div className=\"Description\">\n        <span>초기 투자 금액: </span>\n        <Box sx={{ display: \"flex\" }}>\n          <FormControl variant=\"standard\">\n            <Input\n              id=\"초기투자금액\"\n              value={PP}\n              onChange={PP_handlChange}\n              endAdornment={\n                <InputAdornment position=\"end\">만원</InputAdornment>\n              }\n              size=\"small\"\n              sx={{ width: \"100px\", ml: \"0.5rem\" }}\n            />\n          </FormControl>\n        </Box>\n      </div>\n      <ComposedChart\n        width={400}\n        height={250}\n        margin={{ top: 20, bottom: 20 }}\n        data={data}\n      >\n        <XAxis dataKey=\"year\" tick={{ fontSize: 10 }} padding={{ right: 20 }} />\n        <YAxis\n          // unit={covUnits}\n          unit=\"만원\"\n          domain={[\"auto\", \"auto\"]}\n          tick={{ fontSize: 10 }}\n          padding={{ bottom: 10 }}\n        />\n        <Tooltip />\n        <Legend tick={{ fontSize: 10 }} />\n        <CartesianGrid stroke=\"#f4f4f4\" />\n        <Area\n          // unit={covUnits}\n          unit=\"만원\"\n          type=\"monotone\"\n          dataKey=\"예상수익범위\"\n          fill=\"#FFB950\"\n          stroke=\"#FFB950\"\n        />\n        <Line\n          // unit={covUnits}\n          unit=\"만원\"\n          type=\"monotone\"\n          dataKey=\"예상수익\"\n          stroke=\"#1D1A82\"\n        />\n        <Line\n          // unit={covUnits}\n          unit=\"만원\"\n          type=\"monotone\"\n          dataKey=\"현재가치\"\n          stroke=\"#B45CCA\"\n        />\n      </ComposedChart>\n      <div className=\"Description\">\n        <span style={{ marginRight: \"0.3rem\" }}>매년 </span>\n        <Box sx={{ display: \"flex\" }}>\n          <FormControl variant=\"standard\" size=\"small\">\n            <Select\n              labelId=\"contribution-select-label\"\n              id=\"contribution-select\"\n              value={PMT}\n              label=\"만원\"\n              onChange={CON_handleChange}\n              defaultValue={0}\n            >\n              {Contribution.map((Value, index) => {\n                return (\n                  <MenuItem key={index} value={Value}>\n                    {Value}만원\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </Box>\n        <span style={{ marginLeft: \"0.3rem\", marginRight: \"0.3rem\" }}>\n          {\" \"}\n          을 적립했을 때{\" \"}\n        </span>\n        <Box sx={{ display: \"flex\" }}>\n          <FormControl variant=\"standard\">\n            <Select\n              labelId=\"year-select-label\"\n              id=\"year-select\"\n              value={Period}\n              label=\"년\"\n              onChange={PER_handleChange}\n              defaultValue={0}\n            >\n              {Year.map((Value, index) => {\n                return (\n                  <MenuItem key={index} value={Value}>\n                    {Value}년\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </Box>\n        <span> 뒤의 </span>\n        <span>\n          예상 수익은{\" \"}\n          <b>\n            {data[Period / 5].예상수익}\n            {/* {covUnits} */}\n            만원\n          </b>\n          입니다.\n          <br />\n          (현재 가치로 환산시{\" \"}\n          <b>\n            {data[Period / 5].현재가치}\n            {/* {covUnits} */}\n            만원\n          </b>\n          )\n        </span>\n      </div>\n      {/* </div> */}\n    </div>\n  );\n}\n\nexport default ProfitGraph;\n"]},"metadata":{},"sourceType":"module"}